
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000002f0  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000000c  08000498  08000498  00010498  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080004a4  080004a4  000104ac  2**0
                  CONTENTS
  4 .ARM          00000000  080004a4  080004a4  000104ac  2**0
                  CONTENTS
  5 .preinit_array 00000000  080004a4  080004ac  000104ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080004a4  080004a4  000104a4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080004a8  080004a8  000104a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000104ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000104ac  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000104ac  2**0
                  CONTENTS, READONLY
 13 .debug_info   000008d2  00000000  00000000  000104dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000023f  00000000  00000000  00010dae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000080  00000000  00000000  00010ff0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000058  00000000  00000000  00011070  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000277c  00000000  00000000  000110c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000c45  00000000  00000000  00013844  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00009d8c  00000000  00000000  00014489  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0001e215  2**0
                  CONTENTS, READONLY
 21 .debug_frame  0000010c  00000000  00000000  0001e268  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000480 	.word	0x08000480

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000480 	.word	0x08000480

080001e8 <SPI_PeriClockControl>:
 *
 *
 */

//Peripheral Clock Setup
void SPI_PeriClockControl(SPI_RegDef_t *pSPIx, uint8_t enordi){
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	6078      	str	r0, [r7, #4]
 80001f0:	460b      	mov	r3, r1
 80001f2:	70fb      	strb	r3, [r7, #3]
	switch(enordi){
 80001f4:	78fb      	ldrb	r3, [r7, #3]
 80001f6:	2b00      	cmp	r3, #0
 80001f8:	d02d      	beq.n	8000256 <SPI_PeriClockControl+0x6e>
 80001fa:	2b01      	cmp	r3, #1
 80001fc:	d157      	bne.n	80002ae <SPI_PeriClockControl+0xc6>
	case 1:
		if(pSPIx == SPI1){
 80001fe:	687b      	ldr	r3, [r7, #4]
 8000200:	4a2e      	ldr	r2, [pc, #184]	; (80002bc <SPI_PeriClockControl+0xd4>)
 8000202:	4293      	cmp	r3, r2
 8000204:	d106      	bne.n	8000214 <SPI_PeriClockControl+0x2c>
			SPI1_PCLK_EN;
 8000206:	4b2e      	ldr	r3, [pc, #184]	; (80002c0 <SPI_PeriClockControl+0xd8>)
 8000208:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800020a:	4a2d      	ldr	r2, [pc, #180]	; (80002c0 <SPI_PeriClockControl+0xd8>)
 800020c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000210:	6453      	str	r3, [r2, #68]	; 0x44
			break;
 8000212:	e04d      	b.n	80002b0 <SPI_PeriClockControl+0xc8>
		}else if(pSPIx == SPI2){
 8000214:	687b      	ldr	r3, [r7, #4]
 8000216:	4a2b      	ldr	r2, [pc, #172]	; (80002c4 <SPI_PeriClockControl+0xdc>)
 8000218:	4293      	cmp	r3, r2
 800021a:	d106      	bne.n	800022a <SPI_PeriClockControl+0x42>
			SPI2_PCLK_EN;
 800021c:	4b28      	ldr	r3, [pc, #160]	; (80002c0 <SPI_PeriClockControl+0xd8>)
 800021e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000220:	4a27      	ldr	r2, [pc, #156]	; (80002c0 <SPI_PeriClockControl+0xd8>)
 8000222:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000226:	6413      	str	r3, [r2, #64]	; 0x40
			break;
 8000228:	e042      	b.n	80002b0 <SPI_PeriClockControl+0xc8>
		}else if(pSPIx == SPI3){
 800022a:	687b      	ldr	r3, [r7, #4]
 800022c:	4a26      	ldr	r2, [pc, #152]	; (80002c8 <SPI_PeriClockControl+0xe0>)
 800022e:	4293      	cmp	r3, r2
 8000230:	d106      	bne.n	8000240 <SPI_PeriClockControl+0x58>
			SPI3_PCLK_EN;
 8000232:	4b23      	ldr	r3, [pc, #140]	; (80002c0 <SPI_PeriClockControl+0xd8>)
 8000234:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000236:	4a22      	ldr	r2, [pc, #136]	; (80002c0 <SPI_PeriClockControl+0xd8>)
 8000238:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800023c:	6413      	str	r3, [r2, #64]	; 0x40
			break;
 800023e:	e037      	b.n	80002b0 <SPI_PeriClockControl+0xc8>
		}else if(pSPIx == SPI4){
 8000240:	687b      	ldr	r3, [r7, #4]
 8000242:	4a22      	ldr	r2, [pc, #136]	; (80002cc <SPI_PeriClockControl+0xe4>)
 8000244:	4293      	cmp	r3, r2
 8000246:	d106      	bne.n	8000256 <SPI_PeriClockControl+0x6e>
			SPI4_PCLK_EN;
 8000248:	4b1d      	ldr	r3, [pc, #116]	; (80002c0 <SPI_PeriClockControl+0xd8>)
 800024a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800024c:	4a1c      	ldr	r2, [pc, #112]	; (80002c0 <SPI_PeriClockControl+0xd8>)
 800024e:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000252:	6453      	str	r3, [r2, #68]	; 0x44
			break;
 8000254:	e02c      	b.n	80002b0 <SPI_PeriClockControl+0xc8>
		}
	case 0:
		if(pSPIx == SPI1){
 8000256:	687b      	ldr	r3, [r7, #4]
 8000258:	4a18      	ldr	r2, [pc, #96]	; (80002bc <SPI_PeriClockControl+0xd4>)
 800025a:	4293      	cmp	r3, r2
 800025c:	d106      	bne.n	800026c <SPI_PeriClockControl+0x84>
			SPI1_PCLK_DI;
 800025e:	4b18      	ldr	r3, [pc, #96]	; (80002c0 <SPI_PeriClockControl+0xd8>)
 8000260:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000262:	4a17      	ldr	r2, [pc, #92]	; (80002c0 <SPI_PeriClockControl+0xd8>)
 8000264:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000268:	6453      	str	r3, [r2, #68]	; 0x44
			break;
 800026a:	e021      	b.n	80002b0 <SPI_PeriClockControl+0xc8>
		}else if(pSPIx == SPI2){
 800026c:	687b      	ldr	r3, [r7, #4]
 800026e:	4a15      	ldr	r2, [pc, #84]	; (80002c4 <SPI_PeriClockControl+0xdc>)
 8000270:	4293      	cmp	r3, r2
 8000272:	d106      	bne.n	8000282 <SPI_PeriClockControl+0x9a>
			SPI2_PCLK_DI;
 8000274:	4b12      	ldr	r3, [pc, #72]	; (80002c0 <SPI_PeriClockControl+0xd8>)
 8000276:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000278:	4a11      	ldr	r2, [pc, #68]	; (80002c0 <SPI_PeriClockControl+0xd8>)
 800027a:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800027e:	6413      	str	r3, [r2, #64]	; 0x40
			break;
 8000280:	e016      	b.n	80002b0 <SPI_PeriClockControl+0xc8>
		}else if(pSPIx == SPI3){
 8000282:	687b      	ldr	r3, [r7, #4]
 8000284:	4a10      	ldr	r2, [pc, #64]	; (80002c8 <SPI_PeriClockControl+0xe0>)
 8000286:	4293      	cmp	r3, r2
 8000288:	d106      	bne.n	8000298 <SPI_PeriClockControl+0xb0>
			SPI3_PCLK_DI;
 800028a:	4b0d      	ldr	r3, [pc, #52]	; (80002c0 <SPI_PeriClockControl+0xd8>)
 800028c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800028e:	4a0c      	ldr	r2, [pc, #48]	; (80002c0 <SPI_PeriClockControl+0xd8>)
 8000290:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 8000294:	6413      	str	r3, [r2, #64]	; 0x40
			break;
 8000296:	e00b      	b.n	80002b0 <SPI_PeriClockControl+0xc8>
		}else if(pSPIx == SPI4){
 8000298:	687b      	ldr	r3, [r7, #4]
 800029a:	4a0c      	ldr	r2, [pc, #48]	; (80002cc <SPI_PeriClockControl+0xe4>)
 800029c:	4293      	cmp	r3, r2
 800029e:	d106      	bne.n	80002ae <SPI_PeriClockControl+0xc6>
			SPI4_PCLK_DI;
 80002a0:	4b07      	ldr	r3, [pc, #28]	; (80002c0 <SPI_PeriClockControl+0xd8>)
 80002a2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80002a4:	4a06      	ldr	r2, [pc, #24]	; (80002c0 <SPI_PeriClockControl+0xd8>)
 80002a6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80002aa:	6453      	str	r3, [r2, #68]	; 0x44
			break;
 80002ac:	e000      	b.n	80002b0 <SPI_PeriClockControl+0xc8>
		}default:
			break;
 80002ae:	bf00      	nop

	}


}
 80002b0:	bf00      	nop
 80002b2:	370c      	adds	r7, #12
 80002b4:	46bd      	mov	sp, r7
 80002b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002ba:	4770      	bx	lr
 80002bc:	40013000 	.word	0x40013000
 80002c0:	40023800 	.word	0x40023800
 80002c4:	40003800 	.word	0x40003800
 80002c8:	40003c00 	.word	0x40003c00
 80002cc:	40003400 	.word	0x40003400

080002d0 <SPI_Init>:

//Init & De-Init
void SPI_Init(SPI_Handle_t* pSPIHandler)
{
 80002d0:	b480      	push	{r7}
 80002d2:	b085      	sub	sp, #20
 80002d4:	af00      	add	r7, sp, #0
 80002d6:	6078      	str	r0, [r7, #4]
uint32_t tempReg = 0;
 80002d8:	2300      	movs	r3, #0
 80002da:	60fb      	str	r3, [r7, #12]
//configure slave/master for device
tempReg |= (pSPIHandler->SPI_Config.SPI_DEVICEMODE << SPI_CR1_MSTER);
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	7a5b      	ldrb	r3, [r3, #9]
 80002e0:	009b      	lsls	r3, r3, #2
 80002e2:	461a      	mov	r2, r3
 80002e4:	68fb      	ldr	r3, [r7, #12]
 80002e6:	4313      	orrs	r3, r2
 80002e8:	60fb      	str	r3, [r7, #12]

//configure baud rate for SPI peripheral
tempReg |= (pSPIHandler->SPI_Config.SPI_Speed << SPI_CR1_BAUDRATE);
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	799b      	ldrb	r3, [r3, #6]
 80002ee:	00db      	lsls	r3, r3, #3
 80002f0:	461a      	mov	r2, r3
 80002f2:	68fb      	ldr	r3, [r7, #12]
 80002f4:	4313      	orrs	r3, r2
 80002f6:	60fb      	str	r3, [r7, #12]

//configure slave management
tempReg |= (pSPIHandler->SPI_Config.SPI_SSM << SPI_CR1_SSM);
 80002f8:	687b      	ldr	r3, [r7, #4]
 80002fa:	795b      	ldrb	r3, [r3, #5]
 80002fc:	025b      	lsls	r3, r3, #9
 80002fe:	461a      	mov	r2, r3
 8000300:	68fb      	ldr	r3, [r7, #12]
 8000302:	4313      	orrs	r3, r2
 8000304:	60fb      	str	r3, [r7, #12]

tempReg |= (pSPIHandler->SPI_Config.SPI_CPOL << SPI_CR1_CPOL);
 8000306:	687b      	ldr	r3, [r7, #4]
 8000308:	7a1b      	ldrb	r3, [r3, #8]
 800030a:	005b      	lsls	r3, r3, #1
 800030c:	461a      	mov	r2, r3
 800030e:	68fb      	ldr	r3, [r7, #12]
 8000310:	4313      	orrs	r3, r2
 8000312:	60fb      	str	r3, [r7, #12]

tempReg |= (pSPIHandler->SPI_Config.SPI_CPHA << SPI_CR1_CPHA);
 8000314:	687b      	ldr	r3, [r7, #4]
 8000316:	79db      	ldrb	r3, [r3, #7]
 8000318:	461a      	mov	r2, r3
 800031a:	68fb      	ldr	r3, [r7, #12]
 800031c:	4313      	orrs	r3, r2
 800031e:	60fb      	str	r3, [r7, #12]
//confgiure data frame format.
//tempReg |= (pSPIHandler->SPI_Config.)

//configure bus config
//Full duplex
if(pSPIHandler->SPI_Config.BusConfig == SPI_CR1_BIDI_MODE)
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	791b      	ldrb	r3, [r3, #4]
 8000324:	2b0f      	cmp	r3, #15
 8000326:	d104      	bne.n	8000332 <SPI_Init+0x62>
{
	//clear bidi mode
	(tempReg &= ~(1 << SPI_CR1_BIDI_MODE));
 8000328:	68fb      	ldr	r3, [r7, #12]
 800032a:	f423 4300 	bic.w	r3, r3, #32768	; 0x8000
 800032e:	60fb      	str	r3, [r7, #12]
 8000330:	e014      	b.n	800035c <SPI_Init+0x8c>

}

else if(pSPIHandler->SPI_Config.BusConfig == SPI_CR1_BIDI_OE)
 8000332:	687b      	ldr	r3, [r7, #4]
 8000334:	791b      	ldrb	r3, [r3, #4]
 8000336:	2b0e      	cmp	r3, #14
 8000338:	d104      	bne.n	8000344 <SPI_Init+0x74>
{
	//Set the bidi mode bit
	(tempReg |= (1 << SPI_CR1_BIDI_MODE));
 800033a:	68fb      	ldr	r3, [r7, #12]
 800033c:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000340:	60fb      	str	r3, [r7, #12]
 8000342:	e00b      	b.n	800035c <SPI_Init+0x8c>

}

else if(pSPIHandler->SPI_Config.BusConfig == SPI_SIMPLEX_RX_ONLY)
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	791b      	ldrb	r3, [r3, #4]
 8000348:	2b03      	cmp	r3, #3
 800034a:	d107      	bne.n	800035c <SPI_Init+0x8c>
{
	//set bidi mode bit for half duplex
	(tempReg |= (1 << SPI_CR1_BIDI_MODE));
 800034c:	68fb      	ldr	r3, [r7, #12]
 800034e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8000352:	60fb      	str	r3, [r7, #12]
	//set rx only bit
	(tempReg |= (1 << SPI_CR1_RX_ONLY));
 8000354:	68fb      	ldr	r3, [r7, #12]
 8000356:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800035a:	60fb      	str	r3, [r7, #12]
}

//input settings into the register
pSPIHandler->pSPIx->SPI_CR1 = tempReg;
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	681b      	ldr	r3, [r3, #0]
 8000360:	68fa      	ldr	r2, [r7, #12]
 8000362:	601a      	str	r2, [r3, #0]


}
 8000364:	bf00      	nop
 8000366:	3714      	adds	r7, #20
 8000368:	46bd      	mov	sp, r7
 800036a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800036e:	4770      	bx	lr

08000370 <main>:




int main(void)
{
 8000370:	b580      	push	{r7, lr}
 8000372:	b088      	sub	sp, #32
 8000374:	af00      	add	r7, sp, #0
char c[] = "Hello World";
 8000376:	4a18      	ldr	r2, [pc, #96]	; (80003d8 <main+0x68>)
 8000378:	f107 0314 	add.w	r3, r7, #20
 800037c:	ca07      	ldmia	r2, {r0, r1, r2}
 800037e:	e883 0007 	stmia.w	r3, {r0, r1, r2}

//configure GPIOB 12 - 15 for spi 2 use
GPIO_Handle_t SPI2_MOSI = {0};
 8000382:	f107 0308 	add.w	r3, r7, #8
 8000386:	2200      	movs	r2, #0
 8000388:	601a      	str	r2, [r3, #0]
 800038a:	605a      	str	r2, [r3, #4]
 800038c:	609a      	str	r2, [r3, #8]
SPI2_MOSI.pGPIOx = GPIOB;
 800038e:	4b13      	ldr	r3, [pc, #76]	; (80003dc <main+0x6c>)
 8000390:	60bb      	str	r3, [r7, #8]
SPI2_MOSI.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_12;
 8000392:	230c      	movs	r3, #12
 8000394:	733b      	strb	r3, [r7, #12]
SPI2_MOSI.GPIO_PinConfig.GPIO_PinAltFunMode = GPIO_AF5;
 8000396:	2305      	movs	r3, #5
 8000398:	747b      	strb	r3, [r7, #17]
SPI2_MOSI.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUPUT;
 800039a:	2301      	movs	r3, #1
 800039c:	737b      	strb	r3, [r7, #13]




//configure spi2 for testing
SPI_PeriClockControl(SPI2, ENABLE);
 800039e:	2101      	movs	r1, #1
 80003a0:	480f      	ldr	r0, [pc, #60]	; (80003e0 <main+0x70>)
 80003a2:	f7ff ff21 	bl	80001e8 <SPI_PeriClockControl>

SPI_Handle_t *spi2 = {0};
 80003a6:	2300      	movs	r3, #0
 80003a8:	607b      	str	r3, [r7, #4]

spi2->pSPIx = SPI2;
 80003aa:	687b      	ldr	r3, [r7, #4]
 80003ac:	4a0c      	ldr	r2, [pc, #48]	; (80003e0 <main+0x70>)
 80003ae:	601a      	str	r2, [r3, #0]
spi2->SPI_Config.SPI_SSM = SPI_MASTER;
 80003b0:	687b      	ldr	r3, [r7, #4]
 80003b2:	2200      	movs	r2, #0
 80003b4:	715a      	strb	r2, [r3, #5]
spi2->SPI_Config.SPI_Speed = DIVISOR_256;
 80003b6:	687b      	ldr	r3, [r7, #4]
 80003b8:	2207      	movs	r2, #7
 80003ba:	719a      	strb	r2, [r3, #6]
spi2->SPI_Config.SPI_DFF= DFF_8BIT;
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	2200      	movs	r2, #0
 80003c0:	729a      	strb	r2, [r3, #10]
spi2->SPI_Config.SPI_DEVICEMODE =
spi2->SPI_Config.SPI_SSM = SPI_SW_SSM;
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	2201      	movs	r2, #1
 80003c6:	715a      	strb	r2, [r3, #5]
spi2->SPI_Config.SPI_DEVICEMODE =
 80003c8:	687a      	ldr	r2, [r7, #4]
spi2->SPI_Config.SPI_SSM = SPI_SW_SSM;
 80003ca:	795b      	ldrb	r3, [r3, #5]
spi2->SPI_Config.SPI_DEVICEMODE =
 80003cc:	7253      	strb	r3, [r2, #9]

SPI_Init(&spi2);
 80003ce:	1d3b      	adds	r3, r7, #4
 80003d0:	4618      	mov	r0, r3
 80003d2:	f7ff ff7d 	bl	80002d0 <SPI_Init>


while(1);
 80003d6:	e7fe      	b.n	80003d6 <main+0x66>
 80003d8:	08000498 	.word	0x08000498
 80003dc:	40020400 	.word	0x40020400
 80003e0:	40003800 	.word	0x40003800

080003e4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003e4:	480d      	ldr	r0, [pc, #52]	; (800041c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003e6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80003e8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003ec:	480c      	ldr	r0, [pc, #48]	; (8000420 <LoopForever+0x6>)
  ldr r1, =_edata
 80003ee:	490d      	ldr	r1, [pc, #52]	; (8000424 <LoopForever+0xa>)
  ldr r2, =_sidata
 80003f0:	4a0d      	ldr	r2, [pc, #52]	; (8000428 <LoopForever+0xe>)
  movs r3, #0
 80003f2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003f4:	e002      	b.n	80003fc <LoopCopyDataInit>

080003f6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003f6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003f8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003fa:	3304      	adds	r3, #4

080003fc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003fc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003fe:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000400:	d3f9      	bcc.n	80003f6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000402:	4a0a      	ldr	r2, [pc, #40]	; (800042c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000404:	4c0a      	ldr	r4, [pc, #40]	; (8000430 <LoopForever+0x16>)
  movs r3, #0
 8000406:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000408:	e001      	b.n	800040e <LoopFillZerobss>

0800040a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800040a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800040c:	3204      	adds	r2, #4

0800040e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800040e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000410:	d3fb      	bcc.n	800040a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000412:	f000 f811 	bl	8000438 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000416:	f7ff ffab 	bl	8000370 <main>

0800041a <LoopForever>:

LoopForever:
  b LoopForever
 800041a:	e7fe      	b.n	800041a <LoopForever>
  ldr   r0, =_estack
 800041c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000420:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000424:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000428:	080004ac 	.word	0x080004ac
  ldr r2, =_sbss
 800042c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000430:	2000001c 	.word	0x2000001c

08000434 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000434:	e7fe      	b.n	8000434 <ADC_IRQHandler>
	...

08000438 <__libc_init_array>:
 8000438:	b570      	push	{r4, r5, r6, lr}
 800043a:	4d0d      	ldr	r5, [pc, #52]	; (8000470 <__libc_init_array+0x38>)
 800043c:	4c0d      	ldr	r4, [pc, #52]	; (8000474 <__libc_init_array+0x3c>)
 800043e:	1b64      	subs	r4, r4, r5
 8000440:	10a4      	asrs	r4, r4, #2
 8000442:	2600      	movs	r6, #0
 8000444:	42a6      	cmp	r6, r4
 8000446:	d109      	bne.n	800045c <__libc_init_array+0x24>
 8000448:	4d0b      	ldr	r5, [pc, #44]	; (8000478 <__libc_init_array+0x40>)
 800044a:	4c0c      	ldr	r4, [pc, #48]	; (800047c <__libc_init_array+0x44>)
 800044c:	f000 f818 	bl	8000480 <_init>
 8000450:	1b64      	subs	r4, r4, r5
 8000452:	10a4      	asrs	r4, r4, #2
 8000454:	2600      	movs	r6, #0
 8000456:	42a6      	cmp	r6, r4
 8000458:	d105      	bne.n	8000466 <__libc_init_array+0x2e>
 800045a:	bd70      	pop	{r4, r5, r6, pc}
 800045c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000460:	4798      	blx	r3
 8000462:	3601      	adds	r6, #1
 8000464:	e7ee      	b.n	8000444 <__libc_init_array+0xc>
 8000466:	f855 3b04 	ldr.w	r3, [r5], #4
 800046a:	4798      	blx	r3
 800046c:	3601      	adds	r6, #1
 800046e:	e7f2      	b.n	8000456 <__libc_init_array+0x1e>
 8000470:	080004a4 	.word	0x080004a4
 8000474:	080004a4 	.word	0x080004a4
 8000478:	080004a4 	.word	0x080004a4
 800047c:	080004a8 	.word	0x080004a8

08000480 <_init>:
 8000480:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000482:	bf00      	nop
 8000484:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000486:	bc08      	pop	{r3}
 8000488:	469e      	mov	lr, r3
 800048a:	4770      	bx	lr

0800048c <_fini>:
 800048c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800048e:	bf00      	nop
 8000490:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000492:	bc08      	pop	{r3}
 8000494:	469e      	mov	lr, r3
 8000496:	4770      	bx	lr

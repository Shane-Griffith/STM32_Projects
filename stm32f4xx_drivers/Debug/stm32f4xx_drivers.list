
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006f4  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800089c  080008a4  000108a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800089c  0800089c  000108a4  2**0
                  CONTENTS
  4 .ARM          00000000  0800089c  0800089c  000108a4  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800089c  080008a4  000108a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800089c  0800089c  0001089c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080008a0  080008a0  000108a0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000108a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000108a4  2**0
                  CONTENTS
 10 .bss          00000020  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  20000020  20000020  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000108a4  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000ac5  00000000  00000000  000108d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000211  00000000  00000000  00011399  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c0  00000000  00000000  000115b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000098  00000000  00000000  00011670  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000025cb  00000000  00000000  00011708  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000d55  00000000  00000000  00013cd3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000058c6  00000000  00000000  00014a28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0001a2ee  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000240  00000000  00000000  0001a340  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000884 	.word	0x08000884

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000884 	.word	0x08000884

080001e8 <GPIO_PeriClockControl>:
 *
 * @Note              -  none
 */

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	6078      	str	r0, [r7, #4]
 80001f0:	460b      	mov	r3, r1
 80001f2:	70fb      	strb	r3, [r7, #3]

if(EnorDi == ENABLE){
 80001f4:	78fb      	ldrb	r3, [r7, #3]
 80001f6:	2b01      	cmp	r3, #1
 80001f8:	f040 80c5 	bne.w	8000386 <GPIO_PeriClockControl+0x19e>
	if(pGPIOx == GPIOA){
 80001fc:	687b      	ldr	r3, [r7, #4]
 80001fe:	4a65      	ldr	r2, [pc, #404]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000200:	4293      	cmp	r3, r2
 8000202:	d106      	bne.n	8000212 <GPIO_PeriClockControl+0x2a>
		GPIOA_PCLK_EN;
 8000204:	4b64      	ldr	r3, [pc, #400]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 8000206:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000208:	4a63      	ldr	r2, [pc, #396]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 800020a:	f043 0301 	orr.w	r3, r3, #1
 800020e:	6313      	str	r3, [r2, #48]	; 0x30
				GPIOI_PCLK_DI;
			}
	}
}

}
 8000210:	e0b9      	b.n	8000386 <GPIO_PeriClockControl+0x19e>
	}else if(pGPIOx == GPIOB){
 8000212:	687b      	ldr	r3, [r7, #4]
 8000214:	4a61      	ldr	r2, [pc, #388]	; (800039c <GPIO_PeriClockControl+0x1b4>)
 8000216:	4293      	cmp	r3, r2
 8000218:	d106      	bne.n	8000228 <GPIO_PeriClockControl+0x40>
		GPIOB_PCLK_EN;
 800021a:	4b5f      	ldr	r3, [pc, #380]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 800021c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800021e:	4a5e      	ldr	r2, [pc, #376]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 8000220:	f043 0302 	orr.w	r3, r3, #2
 8000224:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000226:	e0ae      	b.n	8000386 <GPIO_PeriClockControl+0x19e>
	}else if(pGPIOx == GPIOC){
 8000228:	687b      	ldr	r3, [r7, #4]
 800022a:	4a5d      	ldr	r2, [pc, #372]	; (80003a0 <GPIO_PeriClockControl+0x1b8>)
 800022c:	4293      	cmp	r3, r2
 800022e:	d106      	bne.n	800023e <GPIO_PeriClockControl+0x56>
		GPIOC_PCLK_EN;
 8000230:	4b59      	ldr	r3, [pc, #356]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 8000232:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000234:	4a58      	ldr	r2, [pc, #352]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 8000236:	f043 0304 	orr.w	r3, r3, #4
 800023a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800023c:	e0a3      	b.n	8000386 <GPIO_PeriClockControl+0x19e>
	}else if(pGPIOx == GPIOD){
 800023e:	687b      	ldr	r3, [r7, #4]
 8000240:	4a58      	ldr	r2, [pc, #352]	; (80003a4 <GPIO_PeriClockControl+0x1bc>)
 8000242:	4293      	cmp	r3, r2
 8000244:	d106      	bne.n	8000254 <GPIO_PeriClockControl+0x6c>
		GPIOD_PCLK_EN;
 8000246:	4b54      	ldr	r3, [pc, #336]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 8000248:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800024a:	4a53      	ldr	r2, [pc, #332]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 800024c:	f043 0308 	orr.w	r3, r3, #8
 8000250:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000252:	e098      	b.n	8000386 <GPIO_PeriClockControl+0x19e>
	}else if(pGPIOx == GPIOE){
 8000254:	687b      	ldr	r3, [r7, #4]
 8000256:	4a54      	ldr	r2, [pc, #336]	; (80003a8 <GPIO_PeriClockControl+0x1c0>)
 8000258:	4293      	cmp	r3, r2
 800025a:	d106      	bne.n	800026a <GPIO_PeriClockControl+0x82>
		GPIOE_PCLK_EN;
 800025c:	4b4e      	ldr	r3, [pc, #312]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 800025e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000260:	4a4d      	ldr	r2, [pc, #308]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 8000262:	f043 0310 	orr.w	r3, r3, #16
 8000266:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000268:	e08d      	b.n	8000386 <GPIO_PeriClockControl+0x19e>
	}else if(pGPIOx == GPIOF){
 800026a:	687b      	ldr	r3, [r7, #4]
 800026c:	4a4f      	ldr	r2, [pc, #316]	; (80003ac <GPIO_PeriClockControl+0x1c4>)
 800026e:	4293      	cmp	r3, r2
 8000270:	d106      	bne.n	8000280 <GPIO_PeriClockControl+0x98>
		GPIOF_PCLK_EN;
 8000272:	4b49      	ldr	r3, [pc, #292]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 8000274:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000276:	4a48      	ldr	r2, [pc, #288]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 8000278:	f043 0310 	orr.w	r3, r3, #16
 800027c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800027e:	e082      	b.n	8000386 <GPIO_PeriClockControl+0x19e>
	}else if(pGPIOx == GPIOG){
 8000280:	687b      	ldr	r3, [r7, #4]
 8000282:	4a4b      	ldr	r2, [pc, #300]	; (80003b0 <GPIO_PeriClockControl+0x1c8>)
 8000284:	4293      	cmp	r3, r2
 8000286:	d106      	bne.n	8000296 <GPIO_PeriClockControl+0xae>
		GPIOG_PCLK_EN;
 8000288:	4b43      	ldr	r3, [pc, #268]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 800028a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028c:	4a42      	ldr	r2, [pc, #264]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 800028e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000292:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000294:	e077      	b.n	8000386 <GPIO_PeriClockControl+0x19e>
	}else if(pGPIOx == GPIOH){
 8000296:	687b      	ldr	r3, [r7, #4]
 8000298:	4a46      	ldr	r2, [pc, #280]	; (80003b4 <GPIO_PeriClockControl+0x1cc>)
 800029a:	4293      	cmp	r3, r2
 800029c:	d106      	bne.n	80002ac <GPIO_PeriClockControl+0xc4>
		GPIOH_PCLK_EN;
 800029e:	4b3e      	ldr	r3, [pc, #248]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 80002a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a2:	4a3d      	ldr	r2, [pc, #244]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 80002a4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002a8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002aa:	e06c      	b.n	8000386 <GPIO_PeriClockControl+0x19e>
	}else if(pGPIOx == GPIOI){
 80002ac:	687b      	ldr	r3, [r7, #4]
 80002ae:	4a42      	ldr	r2, [pc, #264]	; (80003b8 <GPIO_PeriClockControl+0x1d0>)
 80002b0:	4293      	cmp	r3, r2
 80002b2:	d106      	bne.n	80002c2 <GPIO_PeriClockControl+0xda>
		GPIOI_PCLK_EN;
 80002b4:	4b38      	ldr	r3, [pc, #224]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 80002b6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b8:	4a37      	ldr	r2, [pc, #220]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 80002ba:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002be:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002c0:	e061      	b.n	8000386 <GPIO_PeriClockControl+0x19e>
		if(pGPIOx == GPIOA){
 80002c2:	687b      	ldr	r3, [r7, #4]
 80002c4:	4a33      	ldr	r2, [pc, #204]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002c6:	4293      	cmp	r3, r2
 80002c8:	d106      	bne.n	80002d8 <GPIO_PeriClockControl+0xf0>
				GPIOA_PCLK_DI;
 80002ca:	4b33      	ldr	r3, [pc, #204]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 80002cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ce:	4a32      	ldr	r2, [pc, #200]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 80002d0:	f023 0301 	bic.w	r3, r3, #1
 80002d4:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002d6:	e056      	b.n	8000386 <GPIO_PeriClockControl+0x19e>
			}else if(pGPIOx == GPIOB){
 80002d8:	687b      	ldr	r3, [r7, #4]
 80002da:	4a30      	ldr	r2, [pc, #192]	; (800039c <GPIO_PeriClockControl+0x1b4>)
 80002dc:	4293      	cmp	r3, r2
 80002de:	d106      	bne.n	80002ee <GPIO_PeriClockControl+0x106>
				GPIOB_PCLK_DI;
 80002e0:	4b2d      	ldr	r3, [pc, #180]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 80002e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e4:	4a2c      	ldr	r2, [pc, #176]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 80002e6:	f023 0302 	bic.w	r3, r3, #2
 80002ea:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ec:	e04b      	b.n	8000386 <GPIO_PeriClockControl+0x19e>
			}else if(pGPIOx == GPIOC){
 80002ee:	687b      	ldr	r3, [r7, #4]
 80002f0:	4a2b      	ldr	r2, [pc, #172]	; (80003a0 <GPIO_PeriClockControl+0x1b8>)
 80002f2:	4293      	cmp	r3, r2
 80002f4:	d106      	bne.n	8000304 <GPIO_PeriClockControl+0x11c>
				GPIOC_PCLK_DI;
 80002f6:	4b28      	ldr	r3, [pc, #160]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 80002f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002fa:	4a27      	ldr	r2, [pc, #156]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 80002fc:	f023 0304 	bic.w	r3, r3, #4
 8000300:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000302:	e040      	b.n	8000386 <GPIO_PeriClockControl+0x19e>
			}else if(pGPIOx == GPIOD){
 8000304:	687b      	ldr	r3, [r7, #4]
 8000306:	4a27      	ldr	r2, [pc, #156]	; (80003a4 <GPIO_PeriClockControl+0x1bc>)
 8000308:	4293      	cmp	r3, r2
 800030a:	d106      	bne.n	800031a <GPIO_PeriClockControl+0x132>
				GPIOD_PCLK_DI;
 800030c:	4b22      	ldr	r3, [pc, #136]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 800030e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000310:	4a21      	ldr	r2, [pc, #132]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 8000312:	f023 0308 	bic.w	r3, r3, #8
 8000316:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000318:	e035      	b.n	8000386 <GPIO_PeriClockControl+0x19e>
			}else if(pGPIOx == GPIOE){
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	4a22      	ldr	r2, [pc, #136]	; (80003a8 <GPIO_PeriClockControl+0x1c0>)
 800031e:	4293      	cmp	r3, r2
 8000320:	d106      	bne.n	8000330 <GPIO_PeriClockControl+0x148>
				GPIOE_PCLK_DI;
 8000322:	4b1d      	ldr	r3, [pc, #116]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 8000324:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000326:	4a1c      	ldr	r2, [pc, #112]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 8000328:	f023 0310 	bic.w	r3, r3, #16
 800032c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800032e:	e02a      	b.n	8000386 <GPIO_PeriClockControl+0x19e>
			}else if(pGPIOx == GPIOF){
 8000330:	687b      	ldr	r3, [r7, #4]
 8000332:	4a1e      	ldr	r2, [pc, #120]	; (80003ac <GPIO_PeriClockControl+0x1c4>)
 8000334:	4293      	cmp	r3, r2
 8000336:	d106      	bne.n	8000346 <GPIO_PeriClockControl+0x15e>
				GPIOF_PCLK_DI;
 8000338:	4b17      	ldr	r3, [pc, #92]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 800033a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033c:	4a16      	ldr	r2, [pc, #88]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 800033e:	f023 0310 	bic.w	r3, r3, #16
 8000342:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000344:	e01f      	b.n	8000386 <GPIO_PeriClockControl+0x19e>
			}else if(pGPIOx == GPIOG){
 8000346:	687b      	ldr	r3, [r7, #4]
 8000348:	4a19      	ldr	r2, [pc, #100]	; (80003b0 <GPIO_PeriClockControl+0x1c8>)
 800034a:	4293      	cmp	r3, r2
 800034c:	d106      	bne.n	800035c <GPIO_PeriClockControl+0x174>
				GPIOG_PCLK_DI;
 800034e:	4b12      	ldr	r3, [pc, #72]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 8000350:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000352:	4a11      	ldr	r2, [pc, #68]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 8000354:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000358:	6313      	str	r3, [r2, #48]	; 0x30
}
 800035a:	e014      	b.n	8000386 <GPIO_PeriClockControl+0x19e>
			}else if(pGPIOx == GPIOH){
 800035c:	687b      	ldr	r3, [r7, #4]
 800035e:	4a15      	ldr	r2, [pc, #84]	; (80003b4 <GPIO_PeriClockControl+0x1cc>)
 8000360:	4293      	cmp	r3, r2
 8000362:	d106      	bne.n	8000372 <GPIO_PeriClockControl+0x18a>
				GPIOH_PCLK_DI;
 8000364:	4b0c      	ldr	r3, [pc, #48]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 8000366:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000368:	4a0b      	ldr	r2, [pc, #44]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 800036a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800036e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000370:	e009      	b.n	8000386 <GPIO_PeriClockControl+0x19e>
			}else if(pGPIOx == GPIOI){
 8000372:	687b      	ldr	r3, [r7, #4]
 8000374:	4a10      	ldr	r2, [pc, #64]	; (80003b8 <GPIO_PeriClockControl+0x1d0>)
 8000376:	4293      	cmp	r3, r2
 8000378:	d105      	bne.n	8000386 <GPIO_PeriClockControl+0x19e>
				GPIOI_PCLK_DI;
 800037a:	4b07      	ldr	r3, [pc, #28]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 800037c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800037e:	4a06      	ldr	r2, [pc, #24]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 8000380:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000384:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000386:	bf00      	nop
 8000388:	370c      	adds	r7, #12
 800038a:	46bd      	mov	sp, r7
 800038c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000390:	4770      	bx	lr
 8000392:	bf00      	nop
 8000394:	40020000 	.word	0x40020000
 8000398:	40023800 	.word	0x40023800
 800039c:	40020400 	.word	0x40020400
 80003a0:	40020800 	.word	0x40020800
 80003a4:	40020c00 	.word	0x40020c00
 80003a8:	40021000 	.word	0x40021000
 80003ac:	40021400 	.word	0x40021400
 80003b0:	40021800 	.word	0x40021800
 80003b4:	40021c00 	.word	0x40021c00
 80003b8:	40022000 	.word	0x40022000

080003bc <GPIO_Init>:

/*
 *  Init - Deinit
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80003bc:	b480      	push	{r7}
 80003be:	b085      	sub	sp, #20
 80003c0:	af00      	add	r7, sp, #0
 80003c2:	6078      	str	r0, [r7, #4]

//Configure pin mode

//if interrupt is true
if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode < GPIO_MODE_IT_FT){
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	795b      	ldrb	r3, [r3, #5]
 80003c8:	2b03      	cmp	r3, #3
 80003ca:	d810      	bhi.n	80003ee <GPIO_Init+0x32>

	pGPIOHandle->pGPIOx->MODER |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <<
 80003cc:	687b      	ldr	r3, [r7, #4]
 80003ce:	681b      	ldr	r3, [r3, #0]
 80003d0:	681a      	ldr	r2, [r3, #0]
 80003d2:	687b      	ldr	r3, [r7, #4]
 80003d4:	795b      	ldrb	r3, [r3, #5]
 80003d6:	4619      	mov	r1, r3
			(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003d8:	687b      	ldr	r3, [r7, #4]
 80003da:	791b      	ldrb	r3, [r3, #4]
 80003dc:	005b      	lsls	r3, r3, #1
	pGPIOHandle->pGPIOx->MODER |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <<
 80003de:	fa01 f303 	lsl.w	r3, r1, r3
 80003e2:	4619      	mov	r1, r3
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	681b      	ldr	r3, [r3, #0]
 80003e8:	430a      	orrs	r2, r1
 80003ea:	601a      	str	r2, [r3, #0]
 80003ec:	e0c4      	b.n	8000578 <GPIO_Init+0x1bc>

}else{

	//configure pin mode
	pGPIOHandle->pGPIOx->MODER |= (GPIO_MODE_INPUT << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	681a      	ldr	r2, [r3, #0]
 80003f2:	687b      	ldr	r3, [r7, #4]
 80003f4:	681b      	ldr	r3, [r3, #0]
 80003f6:	6812      	ldr	r2, [r2, #0]
 80003f8:	601a      	str	r2, [r3, #0]

	//configure pin for desired interrupt trigger type
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	795b      	ldrb	r3, [r3, #5]
 80003fe:	2b04      	cmp	r3, #4
 8000400:	d117      	bne.n	8000432 <GPIO_Init+0x76>


		//configure falling edge
		EXTI->FTRS |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000402:	4b8d      	ldr	r3, [pc, #564]	; (8000638 <GPIO_Init+0x27c>)
 8000404:	68db      	ldr	r3, [r3, #12]
 8000406:	687a      	ldr	r2, [r7, #4]
 8000408:	7912      	ldrb	r2, [r2, #4]
 800040a:	4611      	mov	r1, r2
 800040c:	2201      	movs	r2, #1
 800040e:	408a      	lsls	r2, r1
 8000410:	4611      	mov	r1, r2
 8000412:	4a89      	ldr	r2, [pc, #548]	; (8000638 <GPIO_Init+0x27c>)
 8000414:	430b      	orrs	r3, r1
 8000416:	60d3      	str	r3, [r2, #12]
		//make sure that rising edge is clear
		EXTI->RTSR &= ~ (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000418:	4b87      	ldr	r3, [pc, #540]	; (8000638 <GPIO_Init+0x27c>)
 800041a:	689b      	ldr	r3, [r3, #8]
 800041c:	687a      	ldr	r2, [r7, #4]
 800041e:	7912      	ldrb	r2, [r2, #4]
 8000420:	4611      	mov	r1, r2
 8000422:	2201      	movs	r2, #1
 8000424:	408a      	lsls	r2, r1
 8000426:	43d2      	mvns	r2, r2
 8000428:	4611      	mov	r1, r2
 800042a:	4a83      	ldr	r2, [pc, #524]	; (8000638 <GPIO_Init+0x27c>)
 800042c:	400b      	ands	r3, r1
 800042e:	6093      	str	r3, [r2, #8]
 8000430:	e035      	b.n	800049e <GPIO_Init+0xe2>

	}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	795b      	ldrb	r3, [r3, #5]
 8000436:	2b05      	cmp	r3, #5
 8000438:	d117      	bne.n	800046a <GPIO_Init+0xae>
		//configure for rising edge
		EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800043a:	4b7f      	ldr	r3, [pc, #508]	; (8000638 <GPIO_Init+0x27c>)
 800043c:	689b      	ldr	r3, [r3, #8]
 800043e:	687a      	ldr	r2, [r7, #4]
 8000440:	7912      	ldrb	r2, [r2, #4]
 8000442:	4611      	mov	r1, r2
 8000444:	2201      	movs	r2, #1
 8000446:	408a      	lsls	r2, r1
 8000448:	4611      	mov	r1, r2
 800044a:	4a7b      	ldr	r2, [pc, #492]	; (8000638 <GPIO_Init+0x27c>)
 800044c:	430b      	orrs	r3, r1
 800044e:	6093      	str	r3, [r2, #8]
		//make sure falling edge is clear
		EXTI->FTRS &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000450:	4b79      	ldr	r3, [pc, #484]	; (8000638 <GPIO_Init+0x27c>)
 8000452:	68db      	ldr	r3, [r3, #12]
 8000454:	687a      	ldr	r2, [r7, #4]
 8000456:	7912      	ldrb	r2, [r2, #4]
 8000458:	4611      	mov	r1, r2
 800045a:	2201      	movs	r2, #1
 800045c:	408a      	lsls	r2, r1
 800045e:	43d2      	mvns	r2, r2
 8000460:	4611      	mov	r1, r2
 8000462:	4a75      	ldr	r2, [pc, #468]	; (8000638 <GPIO_Init+0x27c>)
 8000464:	400b      	ands	r3, r1
 8000466:	60d3      	str	r3, [r2, #12]
 8000468:	e019      	b.n	800049e <GPIO_Init+0xe2>

	}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT){
 800046a:	687b      	ldr	r3, [r7, #4]
 800046c:	795b      	ldrb	r3, [r3, #5]
 800046e:	2b06      	cmp	r3, #6
 8000470:	d115      	bne.n	800049e <GPIO_Init+0xe2>
		//configure rising & falling edge
		EXTI->FTRS |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000472:	4b71      	ldr	r3, [pc, #452]	; (8000638 <GPIO_Init+0x27c>)
 8000474:	68db      	ldr	r3, [r3, #12]
 8000476:	687a      	ldr	r2, [r7, #4]
 8000478:	7912      	ldrb	r2, [r2, #4]
 800047a:	4611      	mov	r1, r2
 800047c:	2201      	movs	r2, #1
 800047e:	408a      	lsls	r2, r1
 8000480:	4611      	mov	r1, r2
 8000482:	4a6d      	ldr	r2, [pc, #436]	; (8000638 <GPIO_Init+0x27c>)
 8000484:	430b      	orrs	r3, r1
 8000486:	60d3      	str	r3, [r2, #12]
		EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000488:	4b6b      	ldr	r3, [pc, #428]	; (8000638 <GPIO_Init+0x27c>)
 800048a:	689b      	ldr	r3, [r3, #8]
 800048c:	687a      	ldr	r2, [r7, #4]
 800048e:	7912      	ldrb	r2, [r2, #4]
 8000490:	4611      	mov	r1, r2
 8000492:	2201      	movs	r2, #1
 8000494:	408a      	lsls	r2, r1
 8000496:	4611      	mov	r1, r2
 8000498:	4a67      	ldr	r2, [pc, #412]	; (8000638 <GPIO_Init+0x27c>)
 800049a:	430b      	orrs	r3, r1
 800049c:	6093      	str	r3, [r2, #8]

	}

	//enable the interrupt over that pin/port + enable pclk for syscfg
	uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 800049e:	687b      	ldr	r3, [r7, #4]
 80004a0:	791b      	ldrb	r3, [r3, #4]
 80004a2:	089b      	lsrs	r3, r3, #2
 80004a4:	73fb      	strb	r3, [r7, #15]
	uint8_t temp2 = (4 *(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4) );
 80004a6:	687b      	ldr	r3, [r7, #4]
 80004a8:	791b      	ldrb	r3, [r3, #4]
 80004aa:	f003 0303 	and.w	r3, r3, #3
 80004ae:	b2db      	uxtb	r3, r3
 80004b0:	009b      	lsls	r3, r3, #2
 80004b2:	73bb      	strb	r3, [r7, #14]
	uint8_t portCode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	681b      	ldr	r3, [r3, #0]
 80004b8:	4a60      	ldr	r2, [pc, #384]	; (800063c <GPIO_Init+0x280>)
 80004ba:	4293      	cmp	r3, r2
 80004bc:	d039      	beq.n	8000532 <GPIO_Init+0x176>
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	681b      	ldr	r3, [r3, #0]
 80004c2:	4a5f      	ldr	r2, [pc, #380]	; (8000640 <GPIO_Init+0x284>)
 80004c4:	4293      	cmp	r3, r2
 80004c6:	d032      	beq.n	800052e <GPIO_Init+0x172>
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	681b      	ldr	r3, [r3, #0]
 80004cc:	4a5d      	ldr	r2, [pc, #372]	; (8000644 <GPIO_Init+0x288>)
 80004ce:	4293      	cmp	r3, r2
 80004d0:	d02b      	beq.n	800052a <GPIO_Init+0x16e>
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	681b      	ldr	r3, [r3, #0]
 80004d6:	4a5c      	ldr	r2, [pc, #368]	; (8000648 <GPIO_Init+0x28c>)
 80004d8:	4293      	cmp	r3, r2
 80004da:	d024      	beq.n	8000526 <GPIO_Init+0x16a>
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	4a5a      	ldr	r2, [pc, #360]	; (800064c <GPIO_Init+0x290>)
 80004e2:	4293      	cmp	r3, r2
 80004e4:	d01d      	beq.n	8000522 <GPIO_Init+0x166>
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	681b      	ldr	r3, [r3, #0]
 80004ea:	4a59      	ldr	r2, [pc, #356]	; (8000650 <GPIO_Init+0x294>)
 80004ec:	4293      	cmp	r3, r2
 80004ee:	d016      	beq.n	800051e <GPIO_Init+0x162>
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	681b      	ldr	r3, [r3, #0]
 80004f4:	4a57      	ldr	r2, [pc, #348]	; (8000654 <GPIO_Init+0x298>)
 80004f6:	4293      	cmp	r3, r2
 80004f8:	d00f      	beq.n	800051a <GPIO_Init+0x15e>
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	681b      	ldr	r3, [r3, #0]
 80004fe:	4a56      	ldr	r2, [pc, #344]	; (8000658 <GPIO_Init+0x29c>)
 8000500:	4293      	cmp	r3, r2
 8000502:	d008      	beq.n	8000516 <GPIO_Init+0x15a>
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	681b      	ldr	r3, [r3, #0]
 8000508:	4a54      	ldr	r2, [pc, #336]	; (800065c <GPIO_Init+0x2a0>)
 800050a:	4293      	cmp	r3, r2
 800050c:	d101      	bne.n	8000512 <GPIO_Init+0x156>
 800050e:	2308      	movs	r3, #8
 8000510:	e010      	b.n	8000534 <GPIO_Init+0x178>
 8000512:	2300      	movs	r3, #0
 8000514:	e00e      	b.n	8000534 <GPIO_Init+0x178>
 8000516:	2307      	movs	r3, #7
 8000518:	e00c      	b.n	8000534 <GPIO_Init+0x178>
 800051a:	2306      	movs	r3, #6
 800051c:	e00a      	b.n	8000534 <GPIO_Init+0x178>
 800051e:	2305      	movs	r3, #5
 8000520:	e008      	b.n	8000534 <GPIO_Init+0x178>
 8000522:	2304      	movs	r3, #4
 8000524:	e006      	b.n	8000534 <GPIO_Init+0x178>
 8000526:	2303      	movs	r3, #3
 8000528:	e004      	b.n	8000534 <GPIO_Init+0x178>
 800052a:	2302      	movs	r3, #2
 800052c:	e002      	b.n	8000534 <GPIO_Init+0x178>
 800052e:	2301      	movs	r3, #1
 8000530:	e000      	b.n	8000534 <GPIO_Init+0x178>
 8000532:	2300      	movs	r3, #0
 8000534:	737b      	strb	r3, [r7, #13]
	SYSCFG_PCLK_EN();
 8000536:	4b4a      	ldr	r3, [pc, #296]	; (8000660 <GPIO_Init+0x2a4>)
 8000538:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800053a:	4a49      	ldr	r2, [pc, #292]	; (8000660 <GPIO_Init+0x2a4>)
 800053c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000540:	6453      	str	r3, [r2, #68]	; 0x44
	SYSCFG->EXTICR[temp1] |= (portCode << temp2);
 8000542:	4a48      	ldr	r2, [pc, #288]	; (8000664 <GPIO_Init+0x2a8>)
 8000544:	7bfb      	ldrb	r3, [r7, #15]
 8000546:	3302      	adds	r3, #2
 8000548:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 800054c:	7b79      	ldrb	r1, [r7, #13]
 800054e:	7bbb      	ldrb	r3, [r7, #14]
 8000550:	fa01 f303 	lsl.w	r3, r1, r3
 8000554:	4618      	mov	r0, r3
 8000556:	4943      	ldr	r1, [pc, #268]	; (8000664 <GPIO_Init+0x2a8>)
 8000558:	7bfb      	ldrb	r3, [r7, #15]
 800055a:	4302      	orrs	r2, r0
 800055c:	3302      	adds	r3, #2
 800055e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	//enable exti interrupt using imr
	EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000562:	4b35      	ldr	r3, [pc, #212]	; (8000638 <GPIO_Init+0x27c>)
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	687a      	ldr	r2, [r7, #4]
 8000568:	7912      	ldrb	r2, [r2, #4]
 800056a:	4611      	mov	r1, r2
 800056c:	2201      	movs	r2, #1
 800056e:	408a      	lsls	r2, r1
 8000570:	4611      	mov	r1, r2
 8000572:	4a31      	ldr	r2, [pc, #196]	; (8000638 <GPIO_Init+0x27c>)
 8000574:	430b      	orrs	r3, r1
 8000576:	6013      	str	r3, [r2, #0]


}

//configure pin speed
pGPIOHandle->pGPIOx->OSPEEDR |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed <<
 8000578:	687b      	ldr	r3, [r7, #4]
 800057a:	681b      	ldr	r3, [r3, #0]
 800057c:	689a      	ldr	r2, [r3, #8]
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	79db      	ldrb	r3, [r3, #7]
 8000582:	4619      	mov	r1, r3
		(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000584:	687b      	ldr	r3, [r7, #4]
 8000586:	791b      	ldrb	r3, [r3, #4]
 8000588:	005b      	lsls	r3, r3, #1
pGPIOHandle->pGPIOx->OSPEEDR |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed <<
 800058a:	fa01 f303 	lsl.w	r3, r1, r3
 800058e:	4619      	mov	r1, r3
 8000590:	687b      	ldr	r3, [r7, #4]
 8000592:	681b      	ldr	r3, [r3, #0]
 8000594:	430a      	orrs	r2, r1
 8000596:	609a      	str	r2, [r3, #8]

//Configure Alt Function Mode

if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	795b      	ldrb	r3, [r3, #5]
 800059c:	2b02      	cmp	r3, #2
 800059e:	d126      	bne.n	80005ee <GPIO_Init+0x232>
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber > 7){
 80005a0:	687b      	ldr	r3, [r7, #4]
 80005a2:	791b      	ldrb	r3, [r3, #4]
 80005a4:	2b07      	cmp	r3, #7
 80005a6:	d912      	bls.n	80005ce <GPIO_Init+0x212>
		pGPIOHandle->pGPIOx->AFRH |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode <<
 80005a8:	687b      	ldr	r3, [r7, #4]
 80005aa:	681b      	ldr	r3, [r3, #0]
 80005ac:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80005ae:	687b      	ldr	r3, [r7, #4]
 80005b0:	7a5b      	ldrb	r3, [r3, #9]
 80005b2:	4619      	mov	r1, r3
				(4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8)));
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	791b      	ldrb	r3, [r3, #4]
 80005b8:	f003 0307 	and.w	r3, r3, #7
 80005bc:	009b      	lsls	r3, r3, #2
		pGPIOHandle->pGPIOx->AFRH |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode <<
 80005be:	fa01 f303 	lsl.w	r3, r1, r3
 80005c2:	4619      	mov	r1, r3
 80005c4:	687b      	ldr	r3, [r7, #4]
 80005c6:	681b      	ldr	r3, [r3, #0]
 80005c8:	430a      	orrs	r2, r1
 80005ca:	625a      	str	r2, [r3, #36]	; 0x24
 80005cc:	e00f      	b.n	80005ee <GPIO_Init+0x232>

	}else{
		pGPIOHandle->pGPIOx->AFRL |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode <<
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	681b      	ldr	r3, [r3, #0]
 80005d2:	6a1a      	ldr	r2, [r3, #32]
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	7a5b      	ldrb	r3, [r3, #9]
 80005d8:	4619      	mov	r1, r3
						(4 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	791b      	ldrb	r3, [r3, #4]
 80005de:	009b      	lsls	r3, r3, #2
		pGPIOHandle->pGPIOx->AFRL |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode <<
 80005e0:	fa01 f303 	lsl.w	r3, r1, r3
 80005e4:	4619      	mov	r1, r3
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	430a      	orrs	r2, r1
 80005ec:	621a      	str	r2, [r3, #32]

}


//Configure open drain/push pull
(pGPIOHandle->pGPIOx->OTYPER |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType  << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));//clear
 80005ee:	687b      	ldr	r3, [r7, #4]
 80005f0:	681b      	ldr	r3, [r3, #0]
 80005f2:	685a      	ldr	r2, [r3, #4]
 80005f4:	687b      	ldr	r3, [r7, #4]
 80005f6:	799b      	ldrb	r3, [r3, #6]
 80005f8:	4619      	mov	r1, r3
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	791b      	ldrb	r3, [r3, #4]
 80005fe:	fa01 f303 	lsl.w	r3, r1, r3
 8000602:	4619      	mov	r1, r3
 8000604:	687b      	ldr	r3, [r7, #4]
 8000606:	681b      	ldr	r3, [r3, #0]
 8000608:	430a      	orrs	r2, r1
 800060a:	605a      	str	r2, [r3, #4]


//configure pull up/pull down register
(pGPIOHandle->pGPIOx->PUPDR |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPDcontrol) <<
 800060c:	687b      	ldr	r3, [r7, #4]
 800060e:	681b      	ldr	r3, [r3, #0]
 8000610:	68da      	ldr	r2, [r3, #12]
 8000612:	687b      	ldr	r3, [r7, #4]
 8000614:	7a1b      	ldrb	r3, [r3, #8]
 8000616:	4619      	mov	r1, r3
		(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));//set
 8000618:	687b      	ldr	r3, [r7, #4]
 800061a:	791b      	ldrb	r3, [r3, #4]
 800061c:	005b      	lsls	r3, r3, #1
(pGPIOHandle->pGPIOx->PUPDR |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPDcontrol) <<
 800061e:	fa01 f303 	lsl.w	r3, r1, r3
 8000622:	4619      	mov	r1, r3
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	430a      	orrs	r2, r1
 800062a:	60da      	str	r2, [r3, #12]



}
 800062c:	bf00      	nop
 800062e:	3714      	adds	r7, #20
 8000630:	46bd      	mov	sp, r7
 8000632:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000636:	4770      	bx	lr
 8000638:	40013c00 	.word	0x40013c00
 800063c:	40020000 	.word	0x40020000
 8000640:	40020400 	.word	0x40020400
 8000644:	40020800 	.word	0x40020800
 8000648:	40020c00 	.word	0x40020c00
 800064c:	40021000 	.word	0x40021000
 8000650:	40021400 	.word	0x40021400
 8000654:	40021800 	.word	0x40021800
 8000658:	40021c00 	.word	0x40021c00
 800065c:	40022000 	.word	0x40022000
 8000660:	40023800 	.word	0x40023800
 8000664:	40013800 	.word	0x40013800

08000668 <GPIO_WriteToOutputPin>:
	return data;
}

//write data to pin
void GPIO_WriteToOutputPin(GPIO_RegDef_t *pGPIOx,uint8_t pinNumber, uint8_t value)
{
 8000668:	b480      	push	{r7}
 800066a:	b083      	sub	sp, #12
 800066c:	af00      	add	r7, sp, #0
 800066e:	6078      	str	r0, [r7, #4]
 8000670:	460b      	mov	r3, r1
 8000672:	70fb      	strb	r3, [r7, #3]
 8000674:	4613      	mov	r3, r2
 8000676:	70bb      	strb	r3, [r7, #2]
	pGPIOx->ODR |= (value << pinNumber);
 8000678:	687b      	ldr	r3, [r7, #4]
 800067a:	695b      	ldr	r3, [r3, #20]
 800067c:	78b9      	ldrb	r1, [r7, #2]
 800067e:	78fa      	ldrb	r2, [r7, #3]
 8000680:	fa01 f202 	lsl.w	r2, r1, r2
 8000684:	431a      	orrs	r2, r3
 8000686:	687b      	ldr	r3, [r7, #4]
 8000688:	615a      	str	r2, [r3, #20]
}
 800068a:	bf00      	nop
 800068c:	370c      	adds	r7, #12
 800068e:	46bd      	mov	sp, r7
 8000690:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000694:	4770      	bx	lr
	...

08000698 <GPIO_IRQInterruptConfig>:

/*
 * IRQ Configuration and ISR handling
 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 8000698:	b480      	push	{r7}
 800069a:	b085      	sub	sp, #20
 800069c:	af00      	add	r7, sp, #0
 800069e:	4603      	mov	r3, r0
 80006a0:	460a      	mov	r2, r1
 80006a2:	71fb      	strb	r3, [r7, #7]
 80006a4:	4613      	mov	r3, r2
 80006a6:	71bb      	strb	r3, [r7, #6]

	//enable the interrupt handler for respective irq handler
	uint8_t temp1 = IRQNumber / 32;
 80006a8:	79fb      	ldrb	r3, [r7, #7]
 80006aa:	095b      	lsrs	r3, r3, #5
 80006ac:	73fb      	strb	r3, [r7, #15]
	uint8_t temp2 = IRQNumber % 32;
 80006ae:	79fb      	ldrb	r3, [r7, #7]
 80006b0:	f003 031f 	and.w	r3, r3, #31
 80006b4:	73bb      	strb	r3, [r7, #14]

	if(EnorDi == ENABLE){
 80006b6:	79bb      	ldrb	r3, [r7, #6]
 80006b8:	2b01      	cmp	r3, #1
 80006ba:	d10e      	bne.n	80006da <GPIO_IRQInterruptConfig+0x42>
		NVIC_SET_EN->NVIC_ISER[temp1] |= (0x1 << temp2);
 80006bc:	4a11      	ldr	r2, [pc, #68]	; (8000704 <GPIO_IRQInterruptConfig+0x6c>)
 80006be:	7bfb      	ldrb	r3, [r7, #15]
 80006c0:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80006c4:	7bbb      	ldrb	r3, [r7, #14]
 80006c6:	2101      	movs	r1, #1
 80006c8:	fa01 f303 	lsl.w	r3, r1, r3
 80006cc:	4618      	mov	r0, r3
 80006ce:	490d      	ldr	r1, [pc, #52]	; (8000704 <GPIO_IRQInterruptConfig+0x6c>)
 80006d0:	7bfb      	ldrb	r3, [r7, #15]
 80006d2:	4302      	orrs	r2, r0
 80006d4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
	}else{
		NVIC_CLR_EN->NVIC_ICER[temp1] |= (0x1 << temp2);
	}


}
 80006d8:	e00d      	b.n	80006f6 <GPIO_IRQInterruptConfig+0x5e>
		NVIC_CLR_EN->NVIC_ICER[temp1] |= (0x1 << temp2);
 80006da:	4a0b      	ldr	r2, [pc, #44]	; (8000708 <GPIO_IRQInterruptConfig+0x70>)
 80006dc:	7bfb      	ldrb	r3, [r7, #15]
 80006de:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 80006e2:	7bbb      	ldrb	r3, [r7, #14]
 80006e4:	2101      	movs	r1, #1
 80006e6:	fa01 f303 	lsl.w	r3, r1, r3
 80006ea:	4618      	mov	r0, r3
 80006ec:	4906      	ldr	r1, [pc, #24]	; (8000708 <GPIO_IRQInterruptConfig+0x70>)
 80006ee:	7bfb      	ldrb	r3, [r7, #15]
 80006f0:	4302      	orrs	r2, r0
 80006f2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80006f6:	bf00      	nop
 80006f8:	3714      	adds	r7, #20
 80006fa:	46bd      	mov	sp, r7
 80006fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000700:	4770      	bx	lr
 8000702:	bf00      	nop
 8000704:	e000e100 	.word	0xe000e100
 8000708:	e000e180 	.word	0xe000e180

0800070c <GPIO_IRQHandler>:
	//configure irq Priority
		uint8_t iprReg = IRQNumber / 4;
		uint8_t bitOffset = ((IRQNumber % 4) * 8);
		NVIC_Priority_Set->NVIC_IPR[iprReg] |= (IRQNumber << bitOffset);
}
void GPIO_IRQHandler(uint8_t pinNumber){
 800070c:	b480      	push	{r7}
 800070e:	b083      	sub	sp, #12
 8000710:	af00      	add	r7, sp, #0
 8000712:	4603      	mov	r3, r0
 8000714:	71fb      	strb	r3, [r7, #7]
	EXTI->PR |= (0x1 << 0);
 8000716:	4b06      	ldr	r3, [pc, #24]	; (8000730 <GPIO_IRQHandler+0x24>)
 8000718:	695b      	ldr	r3, [r3, #20]
 800071a:	4a05      	ldr	r2, [pc, #20]	; (8000730 <GPIO_IRQHandler+0x24>)
 800071c:	f043 0301 	orr.w	r3, r3, #1
 8000720:	6153      	str	r3, [r2, #20]
}
 8000722:	bf00      	nop
 8000724:	370c      	adds	r7, #12
 8000726:	46bd      	mov	sp, r7
 8000728:	f85d 7b04 	ldr.w	r7, [sp], #4
 800072c:	4770      	bx	lr
 800072e:	bf00      	nop
 8000730:	40013c00 	.word	0x40013c00

08000734 <main>:



 uint8_t INTERRUPT_TRIGGERED = 0;
int main(void)
{
 8000734:	b580      	push	{r7, lr}
 8000736:	b086      	sub	sp, #24
 8000738:	af00      	add	r7, sp, #0
//configure user button (interrupt trigger)
	GPIO_Handle_t userButton = {0};
 800073a:	f107 030c 	add.w	r3, r7, #12
 800073e:	2200      	movs	r2, #0
 8000740:	601a      	str	r2, [r3, #0]
 8000742:	605a      	str	r2, [r3, #4]
 8000744:	609a      	str	r2, [r3, #8]
	userButton.pGPIOx = GPIOA;
 8000746:	4b1d      	ldr	r3, [pc, #116]	; (80007bc <main+0x88>)
 8000748:	60fb      	str	r3, [r7, #12]
	userButton.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_RT;
 800074a:	2305      	movs	r3, #5
 800074c:	747b      	strb	r3, [r7, #17]
	userButton.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_0;
 800074e:	2300      	movs	r3, #0
 8000750:	743b      	strb	r3, [r7, #16]
	GPIO_PeriClockControl(userButton.pGPIOx, ENABLE);
 8000752:	68fb      	ldr	r3, [r7, #12]
 8000754:	2101      	movs	r1, #1
 8000756:	4618      	mov	r0, r3
 8000758:	f7ff fd46 	bl	80001e8 <GPIO_PeriClockControl>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI0, ENABLE);
 800075c:	2101      	movs	r1, #1
 800075e:	2006      	movs	r0, #6
 8000760:	f7ff ff9a 	bl	8000698 <GPIO_IRQInterruptConfig>
	GPIO_Init(&userButton);
 8000764:	f107 030c 	add.w	r3, r7, #12
 8000768:	4618      	mov	r0, r3
 800076a:	f7ff fe27 	bl	80003bc <GPIO_Init>

//configure red led
	GPIO_Handle_t redLed = {0};
 800076e:	463b      	mov	r3, r7
 8000770:	2200      	movs	r2, #0
 8000772:	601a      	str	r2, [r3, #0]
 8000774:	605a      	str	r2, [r3, #4]
 8000776:	609a      	str	r2, [r3, #8]
	redLed.pGPIOx = GPIOD;
 8000778:	4b11      	ldr	r3, [pc, #68]	; (80007c0 <main+0x8c>)
 800077a:	603b      	str	r3, [r7, #0]
	redLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUPUT;
 800077c:	2301      	movs	r3, #1
 800077e:	717b      	strb	r3, [r7, #5]
	redLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_14;
 8000780:	230e      	movs	r3, #14
 8000782:	713b      	strb	r3, [r7, #4]
	GPIO_PeriClockControl(redLed.pGPIOx, ENABLE);
 8000784:	683b      	ldr	r3, [r7, #0]
 8000786:	2101      	movs	r1, #1
 8000788:	4618      	mov	r0, r3
 800078a:	f7ff fd2d 	bl	80001e8 <GPIO_PeriClockControl>
	GPIO_Init(&redLed);
 800078e:	463b      	mov	r3, r7
 8000790:	4618      	mov	r0, r3
 8000792:	f7ff fe13 	bl	80003bc <GPIO_Init>


	while(1){
		if(INTERRUPT_TRIGGERED){
 8000796:	4b0b      	ldr	r3, [pc, #44]	; (80007c4 <main+0x90>)
 8000798:	781b      	ldrb	r3, [r3, #0]
 800079a:	2b00      	cmp	r3, #0
 800079c:	d006      	beq.n	80007ac <main+0x78>
			GPIO_WriteToOutputPin(redLed.pGPIOx, redLed.GPIO_PinConfig.GPIO_PinNumber, ENABLE);
 800079e:	683b      	ldr	r3, [r7, #0]
 80007a0:	7939      	ldrb	r1, [r7, #4]
 80007a2:	2201      	movs	r2, #1
 80007a4:	4618      	mov	r0, r3
 80007a6:	f7ff ff5f 	bl	8000668 <GPIO_WriteToOutputPin>
 80007aa:	e7f4      	b.n	8000796 <main+0x62>
		}else{
			GPIO_WriteToOutputPin(redLed.pGPIOx, redLed.GPIO_PinConfig.GPIO_PinNumber, DISABLE);
 80007ac:	683b      	ldr	r3, [r7, #0]
 80007ae:	7939      	ldrb	r1, [r7, #4]
 80007b0:	2200      	movs	r2, #0
 80007b2:	4618      	mov	r0, r3
 80007b4:	f7ff ff58 	bl	8000668 <GPIO_WriteToOutputPin>
		if(INTERRUPT_TRIGGERED){
 80007b8:	e7ed      	b.n	8000796 <main+0x62>
 80007ba:	bf00      	nop
 80007bc:	40020000 	.word	0x40020000
 80007c0:	40020c00 	.word	0x40020c00
 80007c4:	2000001c 	.word	0x2000001c

080007c8 <EXTI0_IRQHandler>:
		}

	}
}

void EXTI0_IRQHandler(){
 80007c8:	b580      	push	{r7, lr}
 80007ca:	af00      	add	r7, sp, #0
	GPIO_IRQHandler(GPIO_PIN_0);
 80007cc:	2000      	movs	r0, #0
 80007ce:	f7ff ff9d 	bl	800070c <GPIO_IRQHandler>
	INTERRUPT_TRIGGERED++;
 80007d2:	4b04      	ldr	r3, [pc, #16]	; (80007e4 <EXTI0_IRQHandler+0x1c>)
 80007d4:	781b      	ldrb	r3, [r3, #0]
 80007d6:	3301      	adds	r3, #1
 80007d8:	b2da      	uxtb	r2, r3
 80007da:	4b02      	ldr	r3, [pc, #8]	; (80007e4 <EXTI0_IRQHandler+0x1c>)
 80007dc:	701a      	strb	r2, [r3, #0]


}
 80007de:	bf00      	nop
 80007e0:	bd80      	pop	{r7, pc}
 80007e2:	bf00      	nop
 80007e4:	2000001c 	.word	0x2000001c

080007e8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80007e8:	480d      	ldr	r0, [pc, #52]	; (8000820 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80007ea:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80007ec:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80007f0:	480c      	ldr	r0, [pc, #48]	; (8000824 <LoopForever+0x6>)
  ldr r1, =_edata
 80007f2:	490d      	ldr	r1, [pc, #52]	; (8000828 <LoopForever+0xa>)
  ldr r2, =_sidata
 80007f4:	4a0d      	ldr	r2, [pc, #52]	; (800082c <LoopForever+0xe>)
  movs r3, #0
 80007f6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80007f8:	e002      	b.n	8000800 <LoopCopyDataInit>

080007fa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80007fa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80007fc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80007fe:	3304      	adds	r3, #4

08000800 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000800:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000802:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000804:	d3f9      	bcc.n	80007fa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000806:	4a0a      	ldr	r2, [pc, #40]	; (8000830 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000808:	4c0a      	ldr	r4, [pc, #40]	; (8000834 <LoopForever+0x16>)
  movs r3, #0
 800080a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800080c:	e001      	b.n	8000812 <LoopFillZerobss>

0800080e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800080e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000810:	3204      	adds	r2, #4

08000812 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000812:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000814:	d3fb      	bcc.n	800080e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000816:	f000 f811 	bl	800083c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800081a:	f7ff ff8b 	bl	8000734 <main>

0800081e <LoopForever>:

LoopForever:
  b LoopForever
 800081e:	e7fe      	b.n	800081e <LoopForever>
  ldr   r0, =_estack
 8000820:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000824:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000828:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800082c:	080008a4 	.word	0x080008a4
  ldr r2, =_sbss
 8000830:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000834:	20000020 	.word	0x20000020

08000838 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000838:	e7fe      	b.n	8000838 <ADC_IRQHandler>
	...

0800083c <__libc_init_array>:
 800083c:	b570      	push	{r4, r5, r6, lr}
 800083e:	4d0d      	ldr	r5, [pc, #52]	; (8000874 <__libc_init_array+0x38>)
 8000840:	4c0d      	ldr	r4, [pc, #52]	; (8000878 <__libc_init_array+0x3c>)
 8000842:	1b64      	subs	r4, r4, r5
 8000844:	10a4      	asrs	r4, r4, #2
 8000846:	2600      	movs	r6, #0
 8000848:	42a6      	cmp	r6, r4
 800084a:	d109      	bne.n	8000860 <__libc_init_array+0x24>
 800084c:	4d0b      	ldr	r5, [pc, #44]	; (800087c <__libc_init_array+0x40>)
 800084e:	4c0c      	ldr	r4, [pc, #48]	; (8000880 <__libc_init_array+0x44>)
 8000850:	f000 f818 	bl	8000884 <_init>
 8000854:	1b64      	subs	r4, r4, r5
 8000856:	10a4      	asrs	r4, r4, #2
 8000858:	2600      	movs	r6, #0
 800085a:	42a6      	cmp	r6, r4
 800085c:	d105      	bne.n	800086a <__libc_init_array+0x2e>
 800085e:	bd70      	pop	{r4, r5, r6, pc}
 8000860:	f855 3b04 	ldr.w	r3, [r5], #4
 8000864:	4798      	blx	r3
 8000866:	3601      	adds	r6, #1
 8000868:	e7ee      	b.n	8000848 <__libc_init_array+0xc>
 800086a:	f855 3b04 	ldr.w	r3, [r5], #4
 800086e:	4798      	blx	r3
 8000870:	3601      	adds	r6, #1
 8000872:	e7f2      	b.n	800085a <__libc_init_array+0x1e>
 8000874:	0800089c 	.word	0x0800089c
 8000878:	0800089c 	.word	0x0800089c
 800087c:	0800089c 	.word	0x0800089c
 8000880:	080008a0 	.word	0x080008a0

08000884 <_init>:
 8000884:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000886:	bf00      	nop
 8000888:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800088a:	bc08      	pop	{r3}
 800088c:	469e      	mov	lr, r3
 800088e:	4770      	bx	lr

08000890 <_fini>:
 8000890:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000892:	bf00      	nop
 8000894:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000896:	bc08      	pop	{r3}
 8000898:	469e      	mov	lr, r3
 800089a:	4770      	bx	lr


stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000005e4  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  0800078c  08000794  00010794  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  0800078c  0800078c  00010794  2**0
                  CONTENTS
  4 .ARM          00000000  0800078c  0800078c  00010794  2**0
                  CONTENTS
  5 .preinit_array 00000000  0800078c  08000794  00010794  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800078c  0800078c  0001078c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000790  08000790  00010790  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010794  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00010794  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00020000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00020000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00010794  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a73  00000000  00000000  000107c4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 0000021a  00000000  00000000  00011237  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000b8  00000000  00000000  00011458  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000090  00000000  00000000  00011510  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000025cb  00000000  00000000  000115a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000cd5  00000000  00000000  00013b6b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000058ac  00000000  00000000  00014840  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000050  00000000  00000000  0001a0ec  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000224  00000000  00000000  0001a13c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000774 	.word	0x08000774

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000774 	.word	0x08000774

080001e8 <GPIO_PeriClockControl>:
 *
 * @Note              -  none
 */

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	6078      	str	r0, [r7, #4]
 80001f0:	460b      	mov	r3, r1
 80001f2:	70fb      	strb	r3, [r7, #3]

if(EnorDi == ENABLE){
 80001f4:	78fb      	ldrb	r3, [r7, #3]
 80001f6:	2b01      	cmp	r3, #1
 80001f8:	f040 80b5 	bne.w	8000366 <GPIO_PeriClockControl+0x17e>
	if(pGPIOx == GPIOA){
 80001fc:	687b      	ldr	r3, [r7, #4]
 80001fe:	4a5d      	ldr	r2, [pc, #372]	; (8000374 <GPIO_PeriClockControl+0x18c>)
 8000200:	4293      	cmp	r3, r2
 8000202:	d105      	bne.n	8000210 <GPIO_PeriClockControl+0x28>
		GPIOA_PCLK_EN;
 8000204:	4b5c      	ldr	r3, [pc, #368]	; (8000378 <GPIO_PeriClockControl+0x190>)
 8000206:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000208:	4a5b      	ldr	r2, [pc, #364]	; (8000378 <GPIO_PeriClockControl+0x190>)
 800020a:	f043 0301 	orr.w	r3, r3, #1
 800020e:	6313      	str	r3, [r2, #48]	; 0x30
	}if(pGPIOx == GPIOB){
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	4a5a      	ldr	r2, [pc, #360]	; (800037c <GPIO_PeriClockControl+0x194>)
 8000214:	4293      	cmp	r3, r2
 8000216:	d105      	bne.n	8000224 <GPIO_PeriClockControl+0x3c>
		GPIOB_PCLK_EN;
 8000218:	4b57      	ldr	r3, [pc, #348]	; (8000378 <GPIO_PeriClockControl+0x190>)
 800021a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800021c:	4a56      	ldr	r2, [pc, #344]	; (8000378 <GPIO_PeriClockControl+0x190>)
 800021e:	f043 0302 	orr.w	r3, r3, #2
 8000222:	6313      	str	r3, [r2, #48]	; 0x30
	}if(pGPIOx == GPIOC){
 8000224:	687b      	ldr	r3, [r7, #4]
 8000226:	4a56      	ldr	r2, [pc, #344]	; (8000380 <GPIO_PeriClockControl+0x198>)
 8000228:	4293      	cmp	r3, r2
 800022a:	d105      	bne.n	8000238 <GPIO_PeriClockControl+0x50>
		GPIOC_PCLK_EN;
 800022c:	4b52      	ldr	r3, [pc, #328]	; (8000378 <GPIO_PeriClockControl+0x190>)
 800022e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000230:	4a51      	ldr	r2, [pc, #324]	; (8000378 <GPIO_PeriClockControl+0x190>)
 8000232:	f043 0304 	orr.w	r3, r3, #4
 8000236:	6313      	str	r3, [r2, #48]	; 0x30
	}if(pGPIOx == GPIOD){
 8000238:	687b      	ldr	r3, [r7, #4]
 800023a:	4a52      	ldr	r2, [pc, #328]	; (8000384 <GPIO_PeriClockControl+0x19c>)
 800023c:	4293      	cmp	r3, r2
 800023e:	d105      	bne.n	800024c <GPIO_PeriClockControl+0x64>
		GPIOD_PCLK_EN;
 8000240:	4b4d      	ldr	r3, [pc, #308]	; (8000378 <GPIO_PeriClockControl+0x190>)
 8000242:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000244:	4a4c      	ldr	r2, [pc, #304]	; (8000378 <GPIO_PeriClockControl+0x190>)
 8000246:	f043 0308 	orr.w	r3, r3, #8
 800024a:	6313      	str	r3, [r2, #48]	; 0x30
	}if(pGPIOx == GPIOE){
 800024c:	687b      	ldr	r3, [r7, #4]
 800024e:	4a4e      	ldr	r2, [pc, #312]	; (8000388 <GPIO_PeriClockControl+0x1a0>)
 8000250:	4293      	cmp	r3, r2
 8000252:	d105      	bne.n	8000260 <GPIO_PeriClockControl+0x78>
		GPIOE_PCLK_EN;
 8000254:	4b48      	ldr	r3, [pc, #288]	; (8000378 <GPIO_PeriClockControl+0x190>)
 8000256:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000258:	4a47      	ldr	r2, [pc, #284]	; (8000378 <GPIO_PeriClockControl+0x190>)
 800025a:	f043 0310 	orr.w	r3, r3, #16
 800025e:	6313      	str	r3, [r2, #48]	; 0x30
	}if(pGPIOx == GPIOF){
 8000260:	687b      	ldr	r3, [r7, #4]
 8000262:	4a4a      	ldr	r2, [pc, #296]	; (800038c <GPIO_PeriClockControl+0x1a4>)
 8000264:	4293      	cmp	r3, r2
 8000266:	d105      	bne.n	8000274 <GPIO_PeriClockControl+0x8c>
		GPIOF_PCLK_EN;
 8000268:	4b43      	ldr	r3, [pc, #268]	; (8000378 <GPIO_PeriClockControl+0x190>)
 800026a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800026c:	4a42      	ldr	r2, [pc, #264]	; (8000378 <GPIO_PeriClockControl+0x190>)
 800026e:	f043 0310 	orr.w	r3, r3, #16
 8000272:	6313      	str	r3, [r2, #48]	; 0x30
	}if(pGPIOx == GPIOG){
 8000274:	687b      	ldr	r3, [r7, #4]
 8000276:	4a46      	ldr	r2, [pc, #280]	; (8000390 <GPIO_PeriClockControl+0x1a8>)
 8000278:	4293      	cmp	r3, r2
 800027a:	d105      	bne.n	8000288 <GPIO_PeriClockControl+0xa0>
		GPIOG_PCLK_EN;
 800027c:	4b3e      	ldr	r3, [pc, #248]	; (8000378 <GPIO_PeriClockControl+0x190>)
 800027e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000280:	4a3d      	ldr	r2, [pc, #244]	; (8000378 <GPIO_PeriClockControl+0x190>)
 8000282:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000286:	6313      	str	r3, [r2, #48]	; 0x30
	}if(pGPIOx == GPIOH){
 8000288:	687b      	ldr	r3, [r7, #4]
 800028a:	4a42      	ldr	r2, [pc, #264]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800028c:	4293      	cmp	r3, r2
 800028e:	d105      	bne.n	800029c <GPIO_PeriClockControl+0xb4>
		GPIOH_PCLK_EN;
 8000290:	4b39      	ldr	r3, [pc, #228]	; (8000378 <GPIO_PeriClockControl+0x190>)
 8000292:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000294:	4a38      	ldr	r2, [pc, #224]	; (8000378 <GPIO_PeriClockControl+0x190>)
 8000296:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800029a:	6313      	str	r3, [r2, #48]	; 0x30
	}if(pGPIOx == GPIOI){
 800029c:	687b      	ldr	r3, [r7, #4]
 800029e:	4a3e      	ldr	r2, [pc, #248]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 80002a0:	4293      	cmp	r3, r2
 80002a2:	d106      	bne.n	80002b2 <GPIO_PeriClockControl+0xca>
		GPIOI_PCLK_EN;
 80002a4:	4b34      	ldr	r3, [pc, #208]	; (8000378 <GPIO_PeriClockControl+0x190>)
 80002a6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a8:	4a33      	ldr	r2, [pc, #204]	; (8000378 <GPIO_PeriClockControl+0x190>)
 80002aa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002ae:	6313      	str	r3, [r2, #48]	; 0x30
				GPIOI_PCLK_DI;
			}
	}
}

}
 80002b0:	e059      	b.n	8000366 <GPIO_PeriClockControl+0x17e>
		if(pGPIOx == GPIOA){
 80002b2:	687b      	ldr	r3, [r7, #4]
 80002b4:	4a2f      	ldr	r2, [pc, #188]	; (8000374 <GPIO_PeriClockControl+0x18c>)
 80002b6:	4293      	cmp	r3, r2
 80002b8:	d105      	bne.n	80002c6 <GPIO_PeriClockControl+0xde>
				GPIOA_PCLK_DI;
 80002ba:	4b2f      	ldr	r3, [pc, #188]	; (8000378 <GPIO_PeriClockControl+0x190>)
 80002bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002be:	4a2e      	ldr	r2, [pc, #184]	; (8000378 <GPIO_PeriClockControl+0x190>)
 80002c0:	f023 0301 	bic.w	r3, r3, #1
 80002c4:	6313      	str	r3, [r2, #48]	; 0x30
			}if(pGPIOx == GPIOB){
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	4a2c      	ldr	r2, [pc, #176]	; (800037c <GPIO_PeriClockControl+0x194>)
 80002ca:	4293      	cmp	r3, r2
 80002cc:	d105      	bne.n	80002da <GPIO_PeriClockControl+0xf2>
				GPIOB_PCLK_DI;
 80002ce:	4b2a      	ldr	r3, [pc, #168]	; (8000378 <GPIO_PeriClockControl+0x190>)
 80002d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d2:	4a29      	ldr	r2, [pc, #164]	; (8000378 <GPIO_PeriClockControl+0x190>)
 80002d4:	f023 0302 	bic.w	r3, r3, #2
 80002d8:	6313      	str	r3, [r2, #48]	; 0x30
			}if(pGPIOx == GPIOC){
 80002da:	687b      	ldr	r3, [r7, #4]
 80002dc:	4a28      	ldr	r2, [pc, #160]	; (8000380 <GPIO_PeriClockControl+0x198>)
 80002de:	4293      	cmp	r3, r2
 80002e0:	d105      	bne.n	80002ee <GPIO_PeriClockControl+0x106>
				GPIOC_PCLK_DI;
 80002e2:	4b25      	ldr	r3, [pc, #148]	; (8000378 <GPIO_PeriClockControl+0x190>)
 80002e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e6:	4a24      	ldr	r2, [pc, #144]	; (8000378 <GPIO_PeriClockControl+0x190>)
 80002e8:	f023 0304 	bic.w	r3, r3, #4
 80002ec:	6313      	str	r3, [r2, #48]	; 0x30
			}if(pGPIOx == GPIOD){
 80002ee:	687b      	ldr	r3, [r7, #4]
 80002f0:	4a24      	ldr	r2, [pc, #144]	; (8000384 <GPIO_PeriClockControl+0x19c>)
 80002f2:	4293      	cmp	r3, r2
 80002f4:	d105      	bne.n	8000302 <GPIO_PeriClockControl+0x11a>
				GPIOD_PCLK_DI;
 80002f6:	4b20      	ldr	r3, [pc, #128]	; (8000378 <GPIO_PeriClockControl+0x190>)
 80002f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002fa:	4a1f      	ldr	r2, [pc, #124]	; (8000378 <GPIO_PeriClockControl+0x190>)
 80002fc:	f023 0308 	bic.w	r3, r3, #8
 8000300:	6313      	str	r3, [r2, #48]	; 0x30
			}if(pGPIOx == GPIOE){
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	4a20      	ldr	r2, [pc, #128]	; (8000388 <GPIO_PeriClockControl+0x1a0>)
 8000306:	4293      	cmp	r3, r2
 8000308:	d105      	bne.n	8000316 <GPIO_PeriClockControl+0x12e>
				GPIOE_PCLK_DI;
 800030a:	4b1b      	ldr	r3, [pc, #108]	; (8000378 <GPIO_PeriClockControl+0x190>)
 800030c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030e:	4a1a      	ldr	r2, [pc, #104]	; (8000378 <GPIO_PeriClockControl+0x190>)
 8000310:	f023 0310 	bic.w	r3, r3, #16
 8000314:	6313      	str	r3, [r2, #48]	; 0x30
			}if(pGPIOx == GPIOF){
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	4a1c      	ldr	r2, [pc, #112]	; (800038c <GPIO_PeriClockControl+0x1a4>)
 800031a:	4293      	cmp	r3, r2
 800031c:	d105      	bne.n	800032a <GPIO_PeriClockControl+0x142>
				GPIOF_PCLK_DI;
 800031e:	4b16      	ldr	r3, [pc, #88]	; (8000378 <GPIO_PeriClockControl+0x190>)
 8000320:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000322:	4a15      	ldr	r2, [pc, #84]	; (8000378 <GPIO_PeriClockControl+0x190>)
 8000324:	f023 0310 	bic.w	r3, r3, #16
 8000328:	6313      	str	r3, [r2, #48]	; 0x30
			}if(pGPIOx == GPIOG){
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	4a18      	ldr	r2, [pc, #96]	; (8000390 <GPIO_PeriClockControl+0x1a8>)
 800032e:	4293      	cmp	r3, r2
 8000330:	d105      	bne.n	800033e <GPIO_PeriClockControl+0x156>
				GPIOG_PCLK_DI;
 8000332:	4b11      	ldr	r3, [pc, #68]	; (8000378 <GPIO_PeriClockControl+0x190>)
 8000334:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000336:	4a10      	ldr	r2, [pc, #64]	; (8000378 <GPIO_PeriClockControl+0x190>)
 8000338:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800033c:	6313      	str	r3, [r2, #48]	; 0x30
			}if(pGPIOx == GPIOH){
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	4a14      	ldr	r2, [pc, #80]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000342:	4293      	cmp	r3, r2
 8000344:	d105      	bne.n	8000352 <GPIO_PeriClockControl+0x16a>
				GPIOH_PCLK_DI;
 8000346:	4b0c      	ldr	r3, [pc, #48]	; (8000378 <GPIO_PeriClockControl+0x190>)
 8000348:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800034a:	4a0b      	ldr	r2, [pc, #44]	; (8000378 <GPIO_PeriClockControl+0x190>)
 800034c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000350:	6313      	str	r3, [r2, #48]	; 0x30
			}if(pGPIOx == GPIOI){
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	4a10      	ldr	r2, [pc, #64]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 8000356:	4293      	cmp	r3, r2
 8000358:	d105      	bne.n	8000366 <GPIO_PeriClockControl+0x17e>
				GPIOI_PCLK_DI;
 800035a:	4b07      	ldr	r3, [pc, #28]	; (8000378 <GPIO_PeriClockControl+0x190>)
 800035c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800035e:	4a06      	ldr	r2, [pc, #24]	; (8000378 <GPIO_PeriClockControl+0x190>)
 8000360:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000364:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000366:	bf00      	nop
 8000368:	370c      	adds	r7, #12
 800036a:	46bd      	mov	sp, r7
 800036c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000370:	4770      	bx	lr
 8000372:	bf00      	nop
 8000374:	40020000 	.word	0x40020000
 8000378:	40023800 	.word	0x40023800
 800037c:	40020400 	.word	0x40020400
 8000380:	40020800 	.word	0x40020800
 8000384:	40020c00 	.word	0x40020c00
 8000388:	40021000 	.word	0x40021000
 800038c:	40021400 	.word	0x40021400
 8000390:	40021800 	.word	0x40021800
 8000394:	40021c00 	.word	0x40021c00
 8000398:	40022000 	.word	0x40022000

0800039c <GPIO_Init>:

/*
 *  Init - Deinit
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 800039c:	b480      	push	{r7}
 800039e:	b085      	sub	sp, #20
 80003a0:	af00      	add	r7, sp, #0
 80003a2:	6078      	str	r0, [r7, #4]

//Configure pin mode

//if interrupt is true
if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode < GPIO_MODE_IT_FT){
 80003a4:	687b      	ldr	r3, [r7, #4]
 80003a6:	795b      	ldrb	r3, [r3, #5]
 80003a8:	2b03      	cmp	r3, #3
 80003aa:	d810      	bhi.n	80003ce <GPIO_Init+0x32>

	pGPIOHandle->pGPIOx->MODER |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <<
 80003ac:	687b      	ldr	r3, [r7, #4]
 80003ae:	681b      	ldr	r3, [r3, #0]
 80003b0:	681a      	ldr	r2, [r3, #0]
 80003b2:	687b      	ldr	r3, [r7, #4]
 80003b4:	795b      	ldrb	r3, [r3, #5]
 80003b6:	4619      	mov	r1, r3
			(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	791b      	ldrb	r3, [r3, #4]
 80003bc:	005b      	lsls	r3, r3, #1
	pGPIOHandle->pGPIOx->MODER |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <<
 80003be:	fa01 f303 	lsl.w	r3, r1, r3
 80003c2:	4619      	mov	r1, r3
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	681b      	ldr	r3, [r3, #0]
 80003c8:	430a      	orrs	r2, r1
 80003ca:	601a      	str	r2, [r3, #0]
 80003cc:	e0b3      	b.n	8000536 <GPIO_Init+0x19a>

}else{

	//configure pin for desired interrupt trigger type
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT){
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	795b      	ldrb	r3, [r3, #5]
 80003d2:	2b04      	cmp	r3, #4
 80003d4:	d117      	bne.n	8000406 <GPIO_Init+0x6a>
		//configure falling edge
		EXTI->FTRS |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003d6:	4b8d      	ldr	r3, [pc, #564]	; (800060c <GPIO_Init+0x270>)
 80003d8:	68db      	ldr	r3, [r3, #12]
 80003da:	687a      	ldr	r2, [r7, #4]
 80003dc:	7912      	ldrb	r2, [r2, #4]
 80003de:	4611      	mov	r1, r2
 80003e0:	2201      	movs	r2, #1
 80003e2:	408a      	lsls	r2, r1
 80003e4:	4611      	mov	r1, r2
 80003e6:	4a89      	ldr	r2, [pc, #548]	; (800060c <GPIO_Init+0x270>)
 80003e8:	430b      	orrs	r3, r1
 80003ea:	60d3      	str	r3, [r2, #12]
		//make sure that rising edge is clear
		EXTI->RTSR &= ~ (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003ec:	4b87      	ldr	r3, [pc, #540]	; (800060c <GPIO_Init+0x270>)
 80003ee:	689b      	ldr	r3, [r3, #8]
 80003f0:	687a      	ldr	r2, [r7, #4]
 80003f2:	7912      	ldrb	r2, [r2, #4]
 80003f4:	4611      	mov	r1, r2
 80003f6:	2201      	movs	r2, #1
 80003f8:	408a      	lsls	r2, r1
 80003fa:	43d2      	mvns	r2, r2
 80003fc:	4611      	mov	r1, r2
 80003fe:	4a83      	ldr	r2, [pc, #524]	; (800060c <GPIO_Init+0x270>)
 8000400:	400b      	ands	r3, r1
 8000402:	6093      	str	r3, [r2, #8]
 8000404:	e035      	b.n	8000472 <GPIO_Init+0xd6>

	}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT){
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	795b      	ldrb	r3, [r3, #5]
 800040a:	2b05      	cmp	r3, #5
 800040c:	d117      	bne.n	800043e <GPIO_Init+0xa2>
		//configure for rising edge
		EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800040e:	4b7f      	ldr	r3, [pc, #508]	; (800060c <GPIO_Init+0x270>)
 8000410:	689b      	ldr	r3, [r3, #8]
 8000412:	687a      	ldr	r2, [r7, #4]
 8000414:	7912      	ldrb	r2, [r2, #4]
 8000416:	4611      	mov	r1, r2
 8000418:	2201      	movs	r2, #1
 800041a:	408a      	lsls	r2, r1
 800041c:	4611      	mov	r1, r2
 800041e:	4a7b      	ldr	r2, [pc, #492]	; (800060c <GPIO_Init+0x270>)
 8000420:	430b      	orrs	r3, r1
 8000422:	6093      	str	r3, [r2, #8]
		//make sure falling edge is clear
		EXTI->FTRS &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000424:	4b79      	ldr	r3, [pc, #484]	; (800060c <GPIO_Init+0x270>)
 8000426:	68db      	ldr	r3, [r3, #12]
 8000428:	687a      	ldr	r2, [r7, #4]
 800042a:	7912      	ldrb	r2, [r2, #4]
 800042c:	4611      	mov	r1, r2
 800042e:	2201      	movs	r2, #1
 8000430:	408a      	lsls	r2, r1
 8000432:	43d2      	mvns	r2, r2
 8000434:	4611      	mov	r1, r2
 8000436:	4a75      	ldr	r2, [pc, #468]	; (800060c <GPIO_Init+0x270>)
 8000438:	400b      	ands	r3, r1
 800043a:	60d3      	str	r3, [r2, #12]
 800043c:	e019      	b.n	8000472 <GPIO_Init+0xd6>

	}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT){
 800043e:	687b      	ldr	r3, [r7, #4]
 8000440:	795b      	ldrb	r3, [r3, #5]
 8000442:	2b06      	cmp	r3, #6
 8000444:	d115      	bne.n	8000472 <GPIO_Init+0xd6>
		//configure rising & falling edge
		EXTI->FTRS |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000446:	4b71      	ldr	r3, [pc, #452]	; (800060c <GPIO_Init+0x270>)
 8000448:	68db      	ldr	r3, [r3, #12]
 800044a:	687a      	ldr	r2, [r7, #4]
 800044c:	7912      	ldrb	r2, [r2, #4]
 800044e:	4611      	mov	r1, r2
 8000450:	2201      	movs	r2, #1
 8000452:	408a      	lsls	r2, r1
 8000454:	4611      	mov	r1, r2
 8000456:	4a6d      	ldr	r2, [pc, #436]	; (800060c <GPIO_Init+0x270>)
 8000458:	430b      	orrs	r3, r1
 800045a:	60d3      	str	r3, [r2, #12]
		EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800045c:	4b6b      	ldr	r3, [pc, #428]	; (800060c <GPIO_Init+0x270>)
 800045e:	689b      	ldr	r3, [r3, #8]
 8000460:	687a      	ldr	r2, [r7, #4]
 8000462:	7912      	ldrb	r2, [r2, #4]
 8000464:	4611      	mov	r1, r2
 8000466:	2201      	movs	r2, #1
 8000468:	408a      	lsls	r2, r1
 800046a:	4611      	mov	r1, r2
 800046c:	4a67      	ldr	r2, [pc, #412]	; (800060c <GPIO_Init+0x270>)
 800046e:	430b      	orrs	r3, r1
 8000470:	6093      	str	r3, [r2, #8]

	}

	//enable the interrupt over that pin/port + enable pclk for syscfg
	uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 8000472:	687b      	ldr	r3, [r7, #4]
 8000474:	791b      	ldrb	r3, [r3, #4]
 8000476:	089b      	lsrs	r3, r3, #2
 8000478:	73fb      	strb	r3, [r7, #15]
	uint8_t temp2 = (4 *(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4) );
 800047a:	687b      	ldr	r3, [r7, #4]
 800047c:	791b      	ldrb	r3, [r3, #4]
 800047e:	f003 0303 	and.w	r3, r3, #3
 8000482:	b2db      	uxtb	r3, r3
 8000484:	009b      	lsls	r3, r3, #2
 8000486:	73bb      	strb	r3, [r7, #14]
	uint8_t portCode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 8000488:	687b      	ldr	r3, [r7, #4]
 800048a:	681b      	ldr	r3, [r3, #0]
 800048c:	4a60      	ldr	r2, [pc, #384]	; (8000610 <GPIO_Init+0x274>)
 800048e:	4293      	cmp	r3, r2
 8000490:	d039      	beq.n	8000506 <GPIO_Init+0x16a>
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	681b      	ldr	r3, [r3, #0]
 8000496:	4a5f      	ldr	r2, [pc, #380]	; (8000614 <GPIO_Init+0x278>)
 8000498:	4293      	cmp	r3, r2
 800049a:	d032      	beq.n	8000502 <GPIO_Init+0x166>
 800049c:	687b      	ldr	r3, [r7, #4]
 800049e:	681b      	ldr	r3, [r3, #0]
 80004a0:	4a5d      	ldr	r2, [pc, #372]	; (8000618 <GPIO_Init+0x27c>)
 80004a2:	4293      	cmp	r3, r2
 80004a4:	d02b      	beq.n	80004fe <GPIO_Init+0x162>
 80004a6:	687b      	ldr	r3, [r7, #4]
 80004a8:	681b      	ldr	r3, [r3, #0]
 80004aa:	4a5c      	ldr	r2, [pc, #368]	; (800061c <GPIO_Init+0x280>)
 80004ac:	4293      	cmp	r3, r2
 80004ae:	d024      	beq.n	80004fa <GPIO_Init+0x15e>
 80004b0:	687b      	ldr	r3, [r7, #4]
 80004b2:	681b      	ldr	r3, [r3, #0]
 80004b4:	4a5a      	ldr	r2, [pc, #360]	; (8000620 <GPIO_Init+0x284>)
 80004b6:	4293      	cmp	r3, r2
 80004b8:	d01d      	beq.n	80004f6 <GPIO_Init+0x15a>
 80004ba:	687b      	ldr	r3, [r7, #4]
 80004bc:	681b      	ldr	r3, [r3, #0]
 80004be:	4a59      	ldr	r2, [pc, #356]	; (8000624 <GPIO_Init+0x288>)
 80004c0:	4293      	cmp	r3, r2
 80004c2:	d016      	beq.n	80004f2 <GPIO_Init+0x156>
 80004c4:	687b      	ldr	r3, [r7, #4]
 80004c6:	681b      	ldr	r3, [r3, #0]
 80004c8:	4a57      	ldr	r2, [pc, #348]	; (8000628 <GPIO_Init+0x28c>)
 80004ca:	4293      	cmp	r3, r2
 80004cc:	d00f      	beq.n	80004ee <GPIO_Init+0x152>
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	681b      	ldr	r3, [r3, #0]
 80004d2:	4a56      	ldr	r2, [pc, #344]	; (800062c <GPIO_Init+0x290>)
 80004d4:	4293      	cmp	r3, r2
 80004d6:	d008      	beq.n	80004ea <GPIO_Init+0x14e>
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	681b      	ldr	r3, [r3, #0]
 80004dc:	4a54      	ldr	r2, [pc, #336]	; (8000630 <GPIO_Init+0x294>)
 80004de:	4293      	cmp	r3, r2
 80004e0:	d101      	bne.n	80004e6 <GPIO_Init+0x14a>
 80004e2:	2308      	movs	r3, #8
 80004e4:	e010      	b.n	8000508 <GPIO_Init+0x16c>
 80004e6:	2300      	movs	r3, #0
 80004e8:	e00e      	b.n	8000508 <GPIO_Init+0x16c>
 80004ea:	2307      	movs	r3, #7
 80004ec:	e00c      	b.n	8000508 <GPIO_Init+0x16c>
 80004ee:	2306      	movs	r3, #6
 80004f0:	e00a      	b.n	8000508 <GPIO_Init+0x16c>
 80004f2:	2305      	movs	r3, #5
 80004f4:	e008      	b.n	8000508 <GPIO_Init+0x16c>
 80004f6:	2304      	movs	r3, #4
 80004f8:	e006      	b.n	8000508 <GPIO_Init+0x16c>
 80004fa:	2303      	movs	r3, #3
 80004fc:	e004      	b.n	8000508 <GPIO_Init+0x16c>
 80004fe:	2302      	movs	r3, #2
 8000500:	e002      	b.n	8000508 <GPIO_Init+0x16c>
 8000502:	2301      	movs	r3, #1
 8000504:	e000      	b.n	8000508 <GPIO_Init+0x16c>
 8000506:	2300      	movs	r3, #0
 8000508:	737b      	strb	r3, [r7, #13]
	SYSCFG_PCLK_EN();
 800050a:	4b4a      	ldr	r3, [pc, #296]	; (8000634 <GPIO_Init+0x298>)
 800050c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800050e:	4a49      	ldr	r2, [pc, #292]	; (8000634 <GPIO_Init+0x298>)
 8000510:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000514:	6453      	str	r3, [r2, #68]	; 0x44
	SYSCFG->EXTICR[temp1] |= (portCode << temp2);
 8000516:	4a48      	ldr	r2, [pc, #288]	; (8000638 <GPIO_Init+0x29c>)
 8000518:	7bfb      	ldrb	r3, [r7, #15]
 800051a:	3302      	adds	r3, #2
 800051c:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000520:	7b79      	ldrb	r1, [r7, #13]
 8000522:	7bbb      	ldrb	r3, [r7, #14]
 8000524:	fa01 f303 	lsl.w	r3, r1, r3
 8000528:	4618      	mov	r0, r3
 800052a:	4943      	ldr	r1, [pc, #268]	; (8000638 <GPIO_Init+0x29c>)
 800052c:	7bfb      	ldrb	r3, [r7, #15]
 800052e:	4302      	orrs	r2, r0
 8000530:	3302      	adds	r3, #2
 8000532:	f841 2023 	str.w	r2, [r1, r3, lsl #2]


}

//configure pin speed
pGPIOHandle->pGPIOx->OSPEEDR |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed <<
 8000536:	687b      	ldr	r3, [r7, #4]
 8000538:	681b      	ldr	r3, [r3, #0]
 800053a:	689a      	ldr	r2, [r3, #8]
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	79db      	ldrb	r3, [r3, #7]
 8000540:	4619      	mov	r1, r3
		(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000542:	687b      	ldr	r3, [r7, #4]
 8000544:	791b      	ldrb	r3, [r3, #4]
 8000546:	005b      	lsls	r3, r3, #1
pGPIOHandle->pGPIOx->OSPEEDR |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed <<
 8000548:	fa01 f303 	lsl.w	r3, r1, r3
 800054c:	4619      	mov	r1, r3
 800054e:	687b      	ldr	r3, [r7, #4]
 8000550:	681b      	ldr	r3, [r3, #0]
 8000552:	430a      	orrs	r2, r1
 8000554:	609a      	str	r2, [r3, #8]

//Configure Alt Function Mode

if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 8000556:	687b      	ldr	r3, [r7, #4]
 8000558:	795b      	ldrb	r3, [r3, #5]
 800055a:	2b02      	cmp	r3, #2
 800055c:	d131      	bne.n	80005c2 <GPIO_Init+0x226>
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber > 7){
 800055e:	687b      	ldr	r3, [r7, #4]
 8000560:	791b      	ldrb	r3, [r3, #4]
 8000562:	2b07      	cmp	r3, #7
 8000564:	d912      	bls.n	800058c <GPIO_Init+0x1f0>
		pGPIOHandle->pGPIOx->AFRH |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode <<
 8000566:	687b      	ldr	r3, [r7, #4]
 8000568:	681b      	ldr	r3, [r3, #0]
 800056a:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800056c:	687b      	ldr	r3, [r7, #4]
 800056e:	7a5b      	ldrb	r3, [r3, #9]
 8000570:	4619      	mov	r1, r3
				(4 * (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8)));
 8000572:	687b      	ldr	r3, [r7, #4]
 8000574:	791b      	ldrb	r3, [r3, #4]
 8000576:	f003 0307 	and.w	r3, r3, #7
 800057a:	009b      	lsls	r3, r3, #2
		pGPIOHandle->pGPIOx->AFRH |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode <<
 800057c:	fa01 f303 	lsl.w	r3, r1, r3
 8000580:	4619      	mov	r1, r3
 8000582:	687b      	ldr	r3, [r7, #4]
 8000584:	681b      	ldr	r3, [r3, #0]
 8000586:	430a      	orrs	r2, r1
 8000588:	625a      	str	r2, [r3, #36]	; 0x24
 800058a:	e00f      	b.n	80005ac <GPIO_Init+0x210>

	}else{
		pGPIOHandle->pGPIOx->AFRL |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode <<
 800058c:	687b      	ldr	r3, [r7, #4]
 800058e:	681b      	ldr	r3, [r3, #0]
 8000590:	6a1a      	ldr	r2, [r3, #32]
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	7a5b      	ldrb	r3, [r3, #9]
 8000596:	4619      	mov	r1, r3
						(4 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	791b      	ldrb	r3, [r3, #4]
 800059c:	009b      	lsls	r3, r3, #2
		pGPIOHandle->pGPIOx->AFRL |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode <<
 800059e:	fa01 f303 	lsl.w	r3, r1, r3
 80005a2:	4619      	mov	r1, r3
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	681b      	ldr	r3, [r3, #0]
 80005a8:	430a      	orrs	r2, r1
 80005aa:	621a      	str	r2, [r3, #32]
	}
	//configure the gpio port selection in syscfg exticr

	//enable exti interrupt using imr
	EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005ac:	4b17      	ldr	r3, [pc, #92]	; (800060c <GPIO_Init+0x270>)
 80005ae:	681b      	ldr	r3, [r3, #0]
 80005b0:	687a      	ldr	r2, [r7, #4]
 80005b2:	7912      	ldrb	r2, [r2, #4]
 80005b4:	4611      	mov	r1, r2
 80005b6:	2201      	movs	r2, #1
 80005b8:	408a      	lsls	r2, r1
 80005ba:	4611      	mov	r1, r2
 80005bc:	4a13      	ldr	r2, [pc, #76]	; (800060c <GPIO_Init+0x270>)
 80005be:	430b      	orrs	r3, r1
 80005c0:	6013      	str	r3, [r2, #0]
}


//Configure open drain/push pull
(pGPIOHandle->pGPIOx->OTYPER |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType  << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber)));//clear
 80005c2:	687b      	ldr	r3, [r7, #4]
 80005c4:	681b      	ldr	r3, [r3, #0]
 80005c6:	685a      	ldr	r2, [r3, #4]
 80005c8:	687b      	ldr	r3, [r7, #4]
 80005ca:	799b      	ldrb	r3, [r3, #6]
 80005cc:	4619      	mov	r1, r3
 80005ce:	687b      	ldr	r3, [r7, #4]
 80005d0:	791b      	ldrb	r3, [r3, #4]
 80005d2:	fa01 f303 	lsl.w	r3, r1, r3
 80005d6:	4619      	mov	r1, r3
 80005d8:	687b      	ldr	r3, [r7, #4]
 80005da:	681b      	ldr	r3, [r3, #0]
 80005dc:	430a      	orrs	r2, r1
 80005de:	605a      	str	r2, [r3, #4]


//configure pull up/pull down register
(pGPIOHandle->pGPIOx->PUPDR |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPDcontrol) <<
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	681b      	ldr	r3, [r3, #0]
 80005e4:	68da      	ldr	r2, [r3, #12]
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	7a1b      	ldrb	r3, [r3, #8]
 80005ea:	4619      	mov	r1, r3
		(2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));//set
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	791b      	ldrb	r3, [r3, #4]
 80005f0:	005b      	lsls	r3, r3, #1
(pGPIOHandle->pGPIOx->PUPDR |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPDcontrol) <<
 80005f2:	fa01 f303 	lsl.w	r3, r1, r3
 80005f6:	4619      	mov	r1, r3
 80005f8:	687b      	ldr	r3, [r7, #4]
 80005fa:	681b      	ldr	r3, [r3, #0]
 80005fc:	430a      	orrs	r2, r1
 80005fe:	60da      	str	r2, [r3, #12]



}
 8000600:	bf00      	nop
 8000602:	3714      	adds	r7, #20
 8000604:	46bd      	mov	sp, r7
 8000606:	f85d 7b04 	ldr.w	r7, [sp], #4
 800060a:	4770      	bx	lr
 800060c:	40013c00 	.word	0x40013c00
 8000610:	40020000 	.word	0x40020000
 8000614:	40020400 	.word	0x40020400
 8000618:	40020800 	.word	0x40020800
 800061c:	40020c00 	.word	0x40020c00
 8000620:	40021000 	.word	0x40021000
 8000624:	40021400 	.word	0x40021400
 8000628:	40021800 	.word	0x40021800
 800062c:	40021c00 	.word	0x40021c00
 8000630:	40022000 	.word	0x40022000
 8000634:	40023800 	.word	0x40023800
 8000638:	40013800 	.word	0x40013800

0800063c <main>:
	for(int i = 0; i < 250000; i++);

}

int main(void)
{
 800063c:	b580      	push	{r7, lr}
 800063e:	b08a      	sub	sp, #40	; 0x28
 8000640:	af00      	add	r7, sp, #0


	//enable user button as input
	GPIO_Handle_t configUserButton = {0};
 8000642:	f107 031c 	add.w	r3, r7, #28
 8000646:	2200      	movs	r2, #0
 8000648:	601a      	str	r2, [r3, #0]
 800064a:	605a      	str	r2, [r3, #4]
 800064c:	609a      	str	r2, [r3, #8]

	configUserButton.pGPIOx = GPIOA;
 800064e:	4b20      	ldr	r3, [pc, #128]	; (80006d0 <main+0x94>)
 8000650:	61fb      	str	r3, [r7, #28]
	configUserButton.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_RFT;
 8000652:	2306      	movs	r3, #6
 8000654:	f887 3021 	strb.w	r3, [r7, #33]	; 0x21
	configUserButton.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_0;
 8000658:	2300      	movs	r3, #0
 800065a:	f887 3020 	strb.w	r3, [r7, #32]
	configUserButton.GPIO_PinConfig.GPIO_PinPuPDcontrol = GPIO_PIN_PU;
 800065e:	2301      	movs	r3, #1
 8000660:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
	GPIO_PeriClockControl(configUserButton.pGPIOx, ENABLE);
 8000664:	69fb      	ldr	r3, [r7, #28]
 8000666:	2101      	movs	r1, #1
 8000668:	4618      	mov	r0, r3
 800066a:	f7ff fdbd 	bl	80001e8 <GPIO_PeriClockControl>
	GPIO_Init(&configUserButton);
 800066e:	f107 031c 	add.w	r3, r7, #28
 8000672:	4618      	mov	r0, r3
 8000674:	f7ff fe92 	bl	800039c <GPIO_Init>


	//configure data for LED
	GPIO_Handle_t configRedLed = {0};
 8000678:	f107 0310 	add.w	r3, r7, #16
 800067c:	2200      	movs	r2, #0
 800067e:	601a      	str	r2, [r3, #0]
 8000680:	605a      	str	r2, [r3, #4]
 8000682:	609a      	str	r2, [r3, #8]

	configRedLed.pGPIOx = GPIOA;
 8000684:	4b12      	ldr	r3, [pc, #72]	; (80006d0 <main+0x94>)
 8000686:	613b      	str	r3, [r7, #16]
	configRedLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUPUT;
 8000688:	2301      	movs	r3, #1
 800068a:	757b      	strb	r3, [r7, #21]
	configRedLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_13;
 800068c:	230d      	movs	r3, #13
 800068e:	753b      	strb	r3, [r7, #20]
	GPIO_PeriClockControl(configRedLed.pGPIOx, ENABLE);
 8000690:	693b      	ldr	r3, [r7, #16]
 8000692:	2101      	movs	r1, #1
 8000694:	4618      	mov	r0, r3
 8000696:	f7ff fda7 	bl	80001e8 <GPIO_PeriClockControl>
	GPIO_Init(&configRedLed);
 800069a:	f107 0310 	add.w	r3, r7, #16
 800069e:	4618      	mov	r0, r3
 80006a0:	f7ff fe7c 	bl	800039c <GPIO_Init>

	//configure green led
	GPIO_Handle_t greenLed = {0};
 80006a4:	1d3b      	adds	r3, r7, #4
 80006a6:	2200      	movs	r2, #0
 80006a8:	601a      	str	r2, [r3, #0]
 80006aa:	605a      	str	r2, [r3, #4]
 80006ac:	609a      	str	r2, [r3, #8]

	greenLed.pGPIOx = GPIOD;
 80006ae:	4b09      	ldr	r3, [pc, #36]	; (80006d4 <main+0x98>)
 80006b0:	607b      	str	r3, [r7, #4]
	greenLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUPUT;
 80006b2:	2301      	movs	r3, #1
 80006b4:	727b      	strb	r3, [r7, #9]
	greenLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_14;
 80006b6:	230e      	movs	r3, #14
 80006b8:	723b      	strb	r3, [r7, #8]
	GPIO_PeriClockControl(greenLed.pGPIOx, ENABLE);
 80006ba:	687b      	ldr	r3, [r7, #4]
 80006bc:	2101      	movs	r1, #1
 80006be:	4618      	mov	r0, r3
 80006c0:	f7ff fd92 	bl	80001e8 <GPIO_PeriClockControl>
	GPIO_Init(&greenLed);
 80006c4:	1d3b      	adds	r3, r7, #4
 80006c6:	4618      	mov	r0, r3
 80006c8:	f7ff fe68 	bl	800039c <GPIO_Init>



	while(1){
 80006cc:	e7fe      	b.n	80006cc <main+0x90>
 80006ce:	bf00      	nop
 80006d0:	40020000 	.word	0x40020000
 80006d4:	40020c00 	.word	0x40020c00

080006d8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80006d8:	480d      	ldr	r0, [pc, #52]	; (8000710 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80006da:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80006dc:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80006e0:	480c      	ldr	r0, [pc, #48]	; (8000714 <LoopForever+0x6>)
  ldr r1, =_edata
 80006e2:	490d      	ldr	r1, [pc, #52]	; (8000718 <LoopForever+0xa>)
  ldr r2, =_sidata
 80006e4:	4a0d      	ldr	r2, [pc, #52]	; (800071c <LoopForever+0xe>)
  movs r3, #0
 80006e6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80006e8:	e002      	b.n	80006f0 <LoopCopyDataInit>

080006ea <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80006ea:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80006ec:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80006ee:	3304      	adds	r3, #4

080006f0 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80006f0:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80006f2:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80006f4:	d3f9      	bcc.n	80006ea <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80006f6:	4a0a      	ldr	r2, [pc, #40]	; (8000720 <LoopForever+0x12>)
  ldr r4, =_ebss
 80006f8:	4c0a      	ldr	r4, [pc, #40]	; (8000724 <LoopForever+0x16>)
  movs r3, #0
 80006fa:	2300      	movs	r3, #0
  b LoopFillZerobss
 80006fc:	e001      	b.n	8000702 <LoopFillZerobss>

080006fe <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80006fe:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000700:	3204      	adds	r2, #4

08000702 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000702:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000704:	d3fb      	bcc.n	80006fe <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000706:	f000 f811 	bl	800072c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800070a:	f7ff ff97 	bl	800063c <main>

0800070e <LoopForever>:

LoopForever:
  b LoopForever
 800070e:	e7fe      	b.n	800070e <LoopForever>
  ldr   r0, =_estack
 8000710:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000714:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000718:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 800071c:	08000794 	.word	0x08000794
  ldr r2, =_sbss
 8000720:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000724:	2000001c 	.word	0x2000001c

08000728 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000728:	e7fe      	b.n	8000728 <ADC_IRQHandler>
	...

0800072c <__libc_init_array>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	4d0d      	ldr	r5, [pc, #52]	; (8000764 <__libc_init_array+0x38>)
 8000730:	4c0d      	ldr	r4, [pc, #52]	; (8000768 <__libc_init_array+0x3c>)
 8000732:	1b64      	subs	r4, r4, r5
 8000734:	10a4      	asrs	r4, r4, #2
 8000736:	2600      	movs	r6, #0
 8000738:	42a6      	cmp	r6, r4
 800073a:	d109      	bne.n	8000750 <__libc_init_array+0x24>
 800073c:	4d0b      	ldr	r5, [pc, #44]	; (800076c <__libc_init_array+0x40>)
 800073e:	4c0c      	ldr	r4, [pc, #48]	; (8000770 <__libc_init_array+0x44>)
 8000740:	f000 f818 	bl	8000774 <_init>
 8000744:	1b64      	subs	r4, r4, r5
 8000746:	10a4      	asrs	r4, r4, #2
 8000748:	2600      	movs	r6, #0
 800074a:	42a6      	cmp	r6, r4
 800074c:	d105      	bne.n	800075a <__libc_init_array+0x2e>
 800074e:	bd70      	pop	{r4, r5, r6, pc}
 8000750:	f855 3b04 	ldr.w	r3, [r5], #4
 8000754:	4798      	blx	r3
 8000756:	3601      	adds	r6, #1
 8000758:	e7ee      	b.n	8000738 <__libc_init_array+0xc>
 800075a:	f855 3b04 	ldr.w	r3, [r5], #4
 800075e:	4798      	blx	r3
 8000760:	3601      	adds	r6, #1
 8000762:	e7f2      	b.n	800074a <__libc_init_array+0x1e>
 8000764:	0800078c 	.word	0x0800078c
 8000768:	0800078c 	.word	0x0800078c
 800076c:	0800078c 	.word	0x0800078c
 8000770:	08000790 	.word	0x08000790

08000774 <_init>:
 8000774:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000776:	bf00      	nop
 8000778:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800077a:	bc08      	pop	{r3}
 800077c:	469e      	mov	lr, r3
 800077e:	4770      	bx	lr

08000780 <_fini>:
 8000780:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000782:	bf00      	nop
 8000784:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000786:	bc08      	pop	{r3}
 8000788:	469e      	mov	lr, r3
 800078a:	4770      	bx	lr
